<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-04-27T07:17:22-07:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Zach Blog</title><subtitle>Zach Blog Engineering Functional Programming Types Management Robotics
</subtitle><entry><title type="html">SF Sauna Rental</title><link href="http://localhost:4000/sf-sauna-rental" rel="alternate" type="text/html" title="SF Sauna Rental" /><published>2025-04-27T01:17:29-07:00</published><updated>2025-04-27T01:17:29-07:00</updated><id>http://localhost:4000/sf-sauna-rental</id><content type="html" xml:base="http://localhost:4000/sf-sauna-rental">&lt;p&gt;Started a new business in January- &lt;a href=&quot;https://sfsaunarental.com/&quot;&gt;SF Sauna Rental&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="health" /><summary type="html">Started a new business in January- SF Sauna Rental</summary></entry><entry><title type="html">Create a Temporary Alternative World</title><link href="http://localhost:4000/create-a-temporary-alternative-world" rel="alternate" type="text/html" title="Create a Temporary Alternative World" /><published>2023-12-01T10:17:29-08:00</published><updated>2023-12-01T10:17:29-08:00</updated><id>http://localhost:4000/create-a-temporary-alternative-world</id><content type="html" xml:base="http://localhost:4000/create-a-temporary-alternative-world">&lt;p&gt;We met at book club to talk about Ch 5 in Art of Gathering : Create a Temporary Alternative World&lt;/p&gt;

&lt;p&gt;Here is a brief of some of our thoughts.&lt;/p&gt;

&lt;h3 id=&quot;some-guidelines-to-help-us-create-the-rules-for-our-temporary-alternative-world&quot;&gt;Some guidelines to help us create the rules for our temporary alternative world&lt;/h3&gt;

&lt;p&gt;a good rule:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;gives permission to everybody to do something weird / risky that they might not do otherwise (courtesy Audrey)&lt;/li&gt;
  &lt;li&gt;encourages risk taking to connect with others&lt;/li&gt;
  &lt;li&gt;helps people connect with other individuals or the group&lt;/li&gt;
  &lt;li&gt;makes everybody feel like you’re in a special world&lt;/li&gt;
  &lt;li&gt;facilitates conversations / interactions that might not happen otherwise&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;example-rules&quot;&gt;example rules:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;“titties!” When going on an adventure, each member gets a “titties” where they get to pick an impromptu side quest with everybodys buy-in (Georgia / David)&lt;/li&gt;
  &lt;li&gt;rubics cube party. 6 colors. Everybody picks one color to dress in, and wears 6 articles of clothing with that color. The goal for everybody is that by the end of the night everybody has one article of each color accumulated by trading (Audrey)&lt;/li&gt;
  &lt;li&gt;“I am here” day. Dedicate a whole day adventure together. Minimal planning. Default down. Minimize distractions. Opt-in means committing to the entire day. Pick a neighborhood and explore together (from book)&lt;/li&gt;
  &lt;li&gt;work together for a day to set up wedding (Jackie)&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="friendship" /><summary type="html">We met at book club to talk about Ch 5 in Art of Gathering : Create a Temporary Alternative World</summary></entry><entry><title type="html">Dev environments with Docker</title><link href="http://localhost:4000/dev_envs_with_docker" rel="alternate" type="text/html" title="Dev environments with Docker" /><published>2022-04-14T23:28:17-07:00</published><updated>2022-04-14T23:28:17-07:00</updated><id>http://localhost:4000/my-incredibly-badass-bitch-dev-environments-with-docker</id><content type="html" xml:base="http://localhost:4000/dev_envs_with_docker">&lt;p&gt;I’ve never liked IDEs, or graphical IDEs for a few reasons:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;I’ve never really put in the time to learn them / reap the benefits&lt;/li&gt;
  &lt;li&gt;when learning how to code, they added friction when setting up a new environment for a different language&lt;/li&gt;
  &lt;li&gt;I felt like they obsured a lot, made the dev environment and setup problems harder to debug&lt;/li&gt;
  &lt;li&gt;relying on them made it harder to be productive in a new setting (different computer, server, etc)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, I was sold on the idea of VIM fairly early on, bit the bullet to get over the learning curve, and it’s really paid off.&lt;/p&gt;

&lt;p&gt;Now I’m discovering another reason that not using graphical IDEs is paying off.&lt;/p&gt;

&lt;p&gt;When getting started with a new language and ecosystem, it’s proved to be annoying to download some tools with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;apt&lt;/code&gt;, then maybe you’re downloading some more tools globally with npm. Then, whoops, I wasn’t supposed to download that globally, or those were the tools they used for this project, but it was built in 2011 and nobody does it this way now, or they used different versions of the tool, so now this project isn’t building, and now your computer is in a weird state that you don’t quite understand what you installed. So you try to install the right things, undo some others, but it’s really not clear what’s happening. Once you get it all working, your computer is in a state you don’t quite understand, with tools you probably don’t need, and you couldn’t easily reproduce your environment.&lt;/p&gt;

&lt;p&gt;Also, now if you go to a different computer, you can’t work on this project at all. I realize this is a somewhat rare case, having to have a dev environment on multiple computers for short periods of time, but this was the case for me.&lt;/p&gt;

&lt;p&gt;I started co-opting Docker containers to host a full contained dev environment. Here’s one for a Purescript project:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FROM node:16.14.0-buster-slim

RUN groupmod &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; 1003 node &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; usermod &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; 1003 &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; 1003 node

&lt;span class=&quot;c&quot;&gt;#ENV PURESCRIPT_VERSION 0.13.6&lt;/span&gt;
ENV PURESCRIPT_VERSION 0.14.2
ENV SPAGO_VERSION 0.20.7
ENV TERSER_VERSION 5.11.0

ARG &lt;span class=&quot;nv&quot;&gt;UNAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;aryzach
ARG &lt;span class=&quot;nv&quot;&gt;UID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1001
ARG &lt;span class=&quot;nv&quot;&gt;GID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1001
RUN groupadd &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$GID&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$UNAME&lt;/span&gt;
RUN useradd &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$UID&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$GID&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /bin/bash &lt;span class=&quot;nv&quot;&gt;$UNAME&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# packages for dev environment&lt;/span&gt;
RUN apt-get update 
RUN apt-get &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; curl 
RUN apt-get &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo
&lt;/span&gt;RUN apt-get &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; git
RUN apt &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; tmux
RUN apt &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; vim

&lt;span class=&quot;c&quot;&gt;# for purescript&lt;/span&gt;
RUN apt update &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; git libtinfo5 


&lt;span class=&quot;c&quot;&gt;#USER aryzach &lt;/span&gt;
RUN npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; purescript@&lt;span class=&quot;nv&quot;&gt;$PURESCRIPT_VERSION&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--unsafe-perm&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; pulp bower &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; spago@&lt;span class=&quot;nv&quot;&gt;$SPAGO_VERSION&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--unsafe-perm&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#&amp;amp;&amp;amp; npm install -g terser@$TERSER_VERSION \&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# smoke tests&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; purs &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; spago &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; 
    &lt;span class=&quot;c&quot;&gt;#&amp;amp;&amp;amp; terser --version&lt;/span&gt;

RUN npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; http-server
RUN npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; purs-tidy

&lt;span class=&quot;c&quot;&gt;# setup env&lt;/span&gt;
USER aryzach
WORKDIR /home/aryzach/
RUN git clone https://github.com/aryzach/dotfiles.git
WORKDIR /home/aryzach/dotfiles
RUN /home/aryzach/dotfiles/setup.sh
WORKDIR /home/aryzach/
CMD /bin/bash &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/home/aryzach/.bashrc&quot;&lt;/span&gt;



&lt;span class=&quot;c&quot;&gt;# docker build --build-arg UID=$(id -u) --build-arg GID=$(id -g) -t usehedwig .&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# docker run --net=host -itv `pwd`:/home/aryzach/useHedwig usehedwig /bin/bash&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# docker start -i -a usehedwig&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is in the git repo. So on a new computer, I clone the repo, then run the docker commands at the bottom. I have the dev and language tools I need, without cluttering the host, fully reproducable, files can be edited from either host or within the container, and the only host dependancy is Docker. (So in this case, you could actually use a graphical IDE on the host.)&lt;/p&gt;

&lt;p&gt;Here’s another one for a Haskell project:&lt;/p&gt;

&lt;div class=&quot;language-haskell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dockerfile&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;environment&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ubuntu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;20.04&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;USER&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;RUN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; 
&lt;span class=&quot;kt&quot;&gt;RUN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;curl&lt;/span&gt; 
&lt;span class=&quot;kt&quot;&gt;RUN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;RUN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;git&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;RUN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmux&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;RUN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vim&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;WORKDIR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;RUN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;curl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sSL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;://&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;haskellstack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt;


&lt;span class=&quot;kt&quot;&gt;RUN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clone&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;://&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aryzach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dotfiles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;RUN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dotfiles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt;


&lt;span class=&quot;kt&quot;&gt;ADD&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;docker&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ssh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;docker&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2024&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2024&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ssh&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ssh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bash&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;docker&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ssh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Anyway, it’s been a really fun way to learn to set up a new dev environment and make it reproducible without joshin around too much on your host computer. Thanks for reading!&lt;/p&gt;</content><author><name></name></author><category term="programming" /><summary type="html">I’ve never liked IDEs, or graphical IDEs for a few reasons: I’ve never really put in the time to learn them / reap the benefits when learning how to code, they added friction when setting up a new environment for a different language I felt like they obsured a lot, made the dev environment and setup problems harder to debug relying on them made it harder to be productive in a new setting (different computer, server, etc)</summary></entry><entry><title type="html">Purescript TCP Server</title><link href="http://localhost:4000/purescript-tcp-server" rel="alternate" type="text/html" title="Purescript TCP Server" /><published>2021-12-19T21:23:33-08:00</published><updated>2021-12-19T21:23:33-08:00</updated><id>http://localhost:4000/purescript-tcp-server</id><content type="html" xml:base="http://localhost:4000/purescript-tcp-server">&lt;p&gt;There’s not a lot of basic purescript examples out there! So I’m putting this up. This is a TCP echo server. Because there aren’t a ton of examples of Purescript, I found it helpful to find a NodeJS example of what I want to do, and then use that to create the Purescript implementation. This is helpful because the Purescript wrapper API to the underlying NodeJS code uses similar terminology / function names as the NodeJS examples.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-purescript&quot;&gt;module Main where

import Prelude

import Effect (Effect)
import Effect.Console (log, logShow)
import Node.Net.Server as Serv
import Node.Net.Socket as Sock
import Node.Encoding as Encode
import Data.Options as Opt
import Data.Unit
import Data.Either as E
import Data.Maybe as M
import Node.Buffer as Buff
import Effect.Exception as Except

main :: Effect Unit
main = do
 server &amp;lt;- Serv.createServer (Opt.Options []) connectionCallback
 a      &amp;lt;- Serv.listenTCP server 8989 &quot;10.0.0.248&quot; 2 listenCallback
 pure unit

connectionCallback:: Sock.Socket -&amp;gt; Effect Unit
connectionCallback s = do
    addr &amp;lt;- Sock.remoteAddress s
    port &amp;lt;- Sock.remotePort s
    _    &amp;lt;- Sock.setEncoding s Encode.UTF8
    _    &amp;lt;- Sock.onData s handleData
    _    &amp;lt;- Sock.onClose s $ handleClose addr
    _    &amp;lt;- Sock.onError s handleError
    logShow addr
&lt;/code&gt;&lt;/pre&gt;</content><author><name></name></author><category term="purescript" /><category term="example" /><summary type="html">There’s not a lot of basic purescript examples out there! So I’m putting this up. This is a TCP echo server. Because there aren’t a ton of examples of Purescript, I found it helpful to find a NodeJS example of what I want to do, and then use that to create the Purescript implementation. This is helpful because the Purescript wrapper API to the underlying NodeJS code uses similar terminology / function names as the NodeJS examples.</summary></entry><entry><title type="html">Quicklearn Containers</title><link href="http://localhost:4000/quicklearn-containers" rel="alternate" type="text/html" title="Quicklearn Containers" /><published>2021-10-31T11:17:29-07:00</published><updated>2021-10-31T11:17:29-07:00</updated><id>http://localhost:4000/quicklearn-containers</id><content type="html" xml:base="http://localhost:4000/quicklearn-containers">&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;
&lt;p&gt;I’m again running into an issue at work where there are gaps in what I know, and it’s slowing down my debugging process. The overall project has to do with running a MANET network with some nodes. Usually the nodes would be real physical devices that move around and dynamically connect and disconnect from each other (self-healing network). The MANET network layer is beta software, and mostly not in our domain. Our job is to try to turn their beta software into a usable product. For testing, we want to run the nodes on virtual machines (VMs). The current process is to use Vagrant to start a few VMs. This starts / configures a few Linux VMs with virtualbox. Then we run an Ansible playbook to install / configure the MANET network software. The current problem is that the ansible build fails. Each node hosts a web page, which is supposedly accessible from the host machine. Even when I ssh into the VM and manually start each service with failed before (which is mostly successful), I still can’t find the web page. One issue is that I don’t know what IP it’s supposed to show up from, but I do know the port. When I start the VMs, my host machine has another network interface, which indicates something about docker.&lt;/p&gt;

&lt;h3 id=&quot;vm-setup&quot;&gt;VM setup&lt;/h3&gt;
&lt;p&gt;I’ve read this post on &lt;a href=&quot;https://www.nakivo.com/blog/virtualbox-network-setting-guide/&quot;&gt;virtualbox network settings&lt;/a&gt; which was very clarifying. I think we should be on a NAT network, but other people who I work with have gotten it to work with the NAT setting. Also, when I try to simply choose ‘NAT Network’ it doesn’t work / requires further setup. Because others have gotten it working with just NAT, I’m moving on from this for now.&lt;/p&gt;

&lt;h3 id=&quot;curious-observations&quot;&gt;Curious observations&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;from a VM, I can ping the host&lt;/li&gt;
  &lt;li&gt;from a VM, I can ping some other physical computer on our network&lt;/li&gt;
  &lt;li&gt;from a VM, I can ping the “default gateway” from their side (I think, if I remember correctly. I’m forgetting that IP rn)&lt;/li&gt;
  &lt;li&gt;from host, I can ping the docker interface (which has it’s own IP, and which I’m assuming is the host-side IP)&lt;/li&gt;
  &lt;li&gt;from host, I can’t ping the VM&lt;/li&gt;
  &lt;li&gt;(need more data on this bc I don’t remember right now)&lt;/li&gt;
  &lt;li&gt;I can see that the VM web server port is open&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;current-questions&quot;&gt;Current questions&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;what is a container / what is docker (I kinda know but need a deeper level)&lt;/li&gt;
  &lt;li&gt;does it make sense that my host network interface called ‘docker’ is the public IP to a private VM network?&lt;/li&gt;
  &lt;li&gt;why can a VM ping host, but host can’t ping VM?&lt;/li&gt;
  &lt;li&gt;how do I find out where the host can access the web page hosted on the VM&lt;/li&gt;
  &lt;li&gt;why are we using VMs instead of containers here? All VMs are running Linux. Host is Linux. Does CentOS7 have a different kernel than Ubuntu? Or maybe it was a design choice that that you didn’t need a native Linux computer.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Networks with docker are confusing me right now, and while I don’t think this exercise will answer all my questions, I think I’ll gain a better framework for understanding how this internal network is working and will help me debug it.&lt;/p&gt;

&lt;p&gt;This post is like the &lt;a href=&quot;https://aryzach.github.io/quicklearn-networking&quot;&gt;Quicklearn Networking&lt;/a&gt; post, but following Julia’s &lt;a href=&quot;https://jvns.ca/#kubernetes---containers&quot;&gt;Kubernetes / containers&lt;/a&gt; section.&lt;/p&gt;

&lt;p&gt;So I first reread the NAT section from the virtualbox networking post linked above. “A guest operating system on a VM can access hosts in a physical local area network (LAN) by using a virtual NAT (Network Address Translation) device. External networks, including the internet, are accessible from a guest OS. A guest machine is not accessible from a host machine, or from other machines in the network when the NAT mode is used for VirtualBox networking.” Well that answers some questions! But then how is the host supposed to be able to access the web page served from a VM? I’m guessing through the docker network interface (if that’s even what that interface is used for). The issue is that when I tried to use the docker IP with web server port, it didn’t work.&lt;/p&gt;

&lt;h2 id=&quot;post-summaries&quot;&gt;Post summaries&lt;/h2&gt;

&lt;h3 id=&quot;docker-is-amazing&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2015/11/09/docker-is-amazing/&quot;&gt;Docker is amazing&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Dockerfile can define OS and what to install on it&lt;/li&gt;
  &lt;li&gt;good for when you need something but has conflicting dependencies from your computer&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;some-questions-about-docker-and-rkt&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2016/09/15/whats-up-with-containers-docker-and-rkt/&quot;&gt;Some questions about Docker and rkt&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;reasons: package versioning (like python venv), make different types of computers behave the same, reproducing dev environment on your personal computer, restrict which system calls you can run in the container for security&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;skipping-a-few-that-dont-seem-relevant&quot;&gt;Skipping a few that don’t seem relevant&lt;/h2&gt;

&lt;h3 id=&quot;what-even-is-a-container-namespaces-and-cgroups&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2016/10/10/what-even-is-a-container/&quot;&gt;What even is a container: namespaces and cgroups&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;namespaces and cgroups are new linux kernel features&lt;/li&gt;
  &lt;li&gt;seems like you can have a seperate namespace of every type and limit the system calls allowed&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&quot;-1&quot;&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&quot;-2&quot;&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&quot;-3&quot;&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&quot;-4&quot;&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&quot;-5&quot;&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&quot;-6&quot;&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&quot;-7&quot;&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&quot;-8&quot;&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&quot;-9&quot;&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/h3&gt;</content><author><name></name></author><category term="work" /><category term="linux" /><category term="containters" /><summary type="html">Background I’m again running into an issue at work where there are gaps in what I know, and it’s slowing down my debugging process. The overall project has to do with running a MANET network with some nodes. Usually the nodes would be real physical devices that move around and dynamically connect and disconnect from each other (self-healing network). The MANET network layer is beta software, and mostly not in our domain. Our job is to try to turn their beta software into a usable product. For testing, we want to run the nodes on virtual machines (VMs). The current process is to use Vagrant to start a few VMs. This starts / configures a few Linux VMs with virtualbox. Then we run an Ansible playbook to install / configure the MANET network software. The current problem is that the ansible build fails. Each node hosts a web page, which is supposedly accessible from the host machine. Even when I ssh into the VM and manually start each service with failed before (which is mostly successful), I still can’t find the web page. One issue is that I don’t know what IP it’s supposed to show up from, but I do know the port. When I start the VMs, my host machine has another network interface, which indicates something about docker.</summary></entry><entry><title type="html">Death with Dignity Op-Ed</title><link href="http://localhost:4000/death-with-dignity-op-ed" rel="alternate" type="text/html" title="Death with Dignity Op-Ed" /><published>2021-10-29T12:06:41-07:00</published><updated>2021-10-29T12:06:41-07:00</updated><id>http://localhost:4000/death-with-dignity-op-ed</id><content type="html" xml:base="http://localhost:4000/death-with-dignity-op-ed">&lt;h1 id=&quot;expanding-assisted-dying-accessibility-to-those-with-severe-dementia&quot;&gt;Expanding Assisted Dying Accessibility to those with Severe Dementia&lt;/h1&gt;

&lt;h3 id=&quot;contents&quot;&gt;Contents&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Background / Intro&lt;/li&gt;
  &lt;li&gt;Outline of legal decisions to be made&lt;/li&gt;
  &lt;li&gt;Nonprofit Business Plan
    &lt;ul&gt;
      &lt;li&gt;Overview&lt;/li&gt;
      &lt;li&gt;Why now&lt;/li&gt;
      &lt;li&gt;Timeline (education: 1-2 years -&amp;gt; services + education + advocacy: 5-15 years -&amp;gt; pass bill)&lt;/li&gt;
      &lt;li&gt;Vibe (and why this vibe)&lt;/li&gt;
      &lt;li&gt;Defining policy and business model&lt;/li&gt;
      &lt;li&gt;Education&lt;/li&gt;
      &lt;li&gt;Services&lt;/li&gt;
      &lt;li&gt;Advocacy&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(or ‘evidence suggests that’ and cite it) Something I’ve heard repeatedly from older, mentally healthy people is that they wouldn’t want to keep living if they had severe dementia. Then there are two end-of-life narratives that follow: their life ends without ever having severe dementia, or they get severe dementia and live with it for an indefinite amount of time until they die (usually not directly from dementia). We need to build the business and legal processes to enable the end-of-life choice to not live with severe dementia.&lt;/p&gt;

&lt;p&gt;Because a dementia-related wish to die is different in nature than a terminally-ill-induced wish to die, we need a different mindset and process.&lt;/p&gt;

&lt;p&gt;Currently, the two main hurdles for somebody with severe dementia to take advantage of the physician-assisted dying law are that you need to be&lt;sup&gt;&lt;a href=&quot;https://deathwithdignity.org/learn/access/#Eligibility&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;“mentally competent, i.e. capable of making and communicating your health care decisions”&lt;/li&gt;
  &lt;li&gt;“diagnosed with a terminal illness that will, within reasonable medical judgment, lead to death within six months”&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I’ll assume the reasons for these requirements are that we want to ensure that:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;this is the patient’s choice&lt;/li&gt;
  &lt;li&gt;they are not making a short-sighted decision, and there is a strong guarantee that their medical condition and quality of life will monotonically decline&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The presumed reasons for these laws are consistant with the reasons somebody with severe dementia would want to take advantage of physician-assisted dying given:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;while they were mentally competent they’ve expressed they wouldn’t want to keep living if they ever have severe dementia&lt;/li&gt;
  &lt;li&gt;we haven’t found a cure for severe dementia&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Canada, Luxembourg, Switzerland, and the Netherlands have legalized some form of physician-assisted death and / or euthanasia for patients with severe dementia, though it’s unclear how often it’s been applied to that demographic.&lt;sup&gt;&lt;a href=&quot;https://www.frontiersin.org/articles/10.3389/fpsyt.2020.622446/full&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;In the US, there are two main logistical hurdles for people who wish to end their life once they have severe dementia:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;They’re not able to make their own medical decisions&lt;/li&gt;
  &lt;li&gt;There are no established business and legal procedures to follow&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Imagine that assisted dying is legal for people with severe dementia, but there is not a well-defined procedure for making the request and carrying out the request. 
Here are a few scenarios I could imagine:&lt;/p&gt;

&lt;h4 id=&quot;scenario-their-children-are-involved&quot;&gt;Scenario: Their children are involved&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;there is a parent who has adult children, and the parent expresses the wish to not continue living if they get severe dementia&lt;/li&gt;
  &lt;li&gt;the parent starts to get mild dementia, realizes it, but they struggle navigating the business / legal processes to put it in place. Even if they manage to plan it, the children will rebel with the argument that their mildly demented parent can’t make these decisions for themself anymore&lt;/li&gt;
  &lt;li&gt;the children have some sort of medical power of attorney agreement over their parent. They know of their parents wish but can’t come to a consensus of how or when to move forward, both logistically and emotionally&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;there is a spouse
………..&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;outline-of-legal-decisions-to-be-made&quot;&gt;Outline of legal decisions to be made&lt;/h3&gt;

&lt;p&gt;The logistics around an assisted death law for somebody with severe dementia are much more complicated than somebody with a six-month prognosis.
As a basic framework, we need to define the following:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;when is the request made&lt;/li&gt;
  &lt;li&gt;who is involved
    &lt;ul&gt;
      &lt;li&gt;family (spouse, children, grandchildren)&lt;/li&gt;
      &lt;li&gt;doctors&lt;/li&gt;
      &lt;li&gt;emotional / psychological support&lt;/li&gt;
      &lt;li&gt;legal support&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;agenda in the years that follow the request
    &lt;ul&gt;
      &lt;li&gt;dementia status check-ins&lt;/li&gt;
      &lt;li&gt;emotional check-ins&lt;/li&gt;
      &lt;li&gt;legal check-ins (the laws could change in the 2 - 30 years between request and action)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;how the request can be redacted
    &lt;ul&gt;
      &lt;li&gt;by who&lt;/li&gt;
      &lt;li&gt;on what timeline&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;nonprofit-business-plan&quot;&gt;Nonprofit Business Plan&lt;/h3&gt;

&lt;h4 id=&quot;overview&quot;&gt;Overview&lt;/h4&gt;

&lt;p&gt;The mission is to make assisted dying an option for those with severe dementia. To do that, we need to:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;legalize the practice&lt;/li&gt;
  &lt;li&gt;establish the systems to support the practice&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The common way to pass a law like this would be to raise money through donations and advocate.&lt;/p&gt;

&lt;p&gt;The main idea here is to bootstrap that process with capital, labor, and enthusiasm by providing preparatory legal, business, and emotional support services to those who wish to take advantage of an assisted dying law should they get severe dementia.&lt;/p&gt;

&lt;h4 id=&quot;why-now&quot;&gt;Why now?&lt;/h4&gt;

&lt;p&gt;A nonprofit with the mission to legalize assisted dying for those with severe dementia is in a unique and privileged position. I can foresee the following independently each taking roughly 10 - 20 years to mature:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;legal work to legalize assisted dying for people with severe dementia&lt;/li&gt;
  &lt;li&gt;development and implementation of the systems and business infrastructure to support the practice&lt;/li&gt;
  &lt;li&gt;culture to embrace the practice&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This conveniently aligns with those in their 60’s to 80’s who share a common sentiment to not want to continue to live if they have severe dementia. This group of people, in 10 - 20 years, will be in a position where they have a higher chance of having some form of dementia. Now is a particularly unique time to act because the size of that age demographic is big (how do I say this? baby boomers).&lt;/p&gt;

&lt;p&gt;These circumstances open up unique advocacy and fundraising advantages. Those who will directly benefit in 10 - 20 years can bootstrap this idea. They can be first clients, helping fund the mission, and those retired might want to contribute to the mission through paid or volunteer advocacy work.&lt;/p&gt;

&lt;p&gt;And we can structure and align the nonprofit in such a way that the preparation services are immediately useful for them by providing legal and family / emotional support (the idea would be to perform the preperation services as if we knew it would be legal. This could be troublesome because if a law doesn’t pass in time, then it might be emotionally harmful for clients).&lt;/p&gt;

&lt;h4 id=&quot;timeline&quot;&gt;Timeline&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;year 1 - year 2:   education + define policy and business models + townhalls&lt;/li&gt;
  &lt;li&gt;year 3 - year 20:  services + education + advocacy + policy and business model refinement&lt;/li&gt;
  &lt;li&gt;year 15 - year 20: pass bill 
(what is the legal process timeline? Official submit, approval / denial, next steps, challenging outcomes, etc)
(need to do research to build a better estimated timeline. Look at death with dignity, and other bills like marijuana)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In year 1 and 2, the dialog from the townhalls and education programs will inform the policy draft and initial business plan, and vice versa. In years 3-7, we’ll implement the business plan and refine it along the way. The organization and mission should begin to take a more concrete shape and have better-defined legal and cultural goals. Performing services will be an iterative process, and once we start implementing the business model, we will learn things that will make us want to improve or pivot the services.&lt;/p&gt;

&lt;p&gt;(I believe it will take roughly this long because it will support many more people and require more peripheral support systems compared to the terminally-ill assisted death model)&lt;/p&gt;

&lt;h4 id=&quot;vibe&quot;&gt;Vibe&lt;/h4&gt;

&lt;p&gt;Death and money are two strong forces. An organization like this could easily devolve into a business that chases inheritances and possibly loses sight of it’s mission. This organization should be structured in a way where the organization, employees, and members are never financially, emotionally, or politically incentivised to influence individual decisions around assisted death.&lt;/p&gt;

&lt;p&gt;The business plan for the provided services must be clear, commonly agreed upon, and held to that standard. The leadership, doctors, lawyers, and other service providers involved must be incentivised appropriately.&lt;/p&gt;

&lt;p&gt;Build a culture of…&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;listening to older people - don’t let the organization get dominated by career-ists&lt;/li&gt;
  &lt;li&gt;community-driven organizational decisions&lt;/li&gt;
  &lt;li&gt;checks and balances - ensure the service providers don’t influence individual decisions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some suggested practical guidelines:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;explicitly forbid financial succession planning services&lt;/li&gt;
  &lt;li&gt;flat fee or sliding scale pricing model for services- net worth or inheritance should never be involved&lt;/li&gt;
  &lt;li&gt;no outside funding - align organization soley with customers, and never be incentivized to please, prioritize, or give weight to non-customer donors (this might be part of why lots of non-profits get watered-down)
    &lt;ul&gt;
      &lt;li&gt;maybe even, once services are provided, disallow donations outside of services. This would help to incentivize prioritizing clients, and not let clients buy power (I think large donors, even if well-intentioned, can disrupt power dynamics, goals, and trajectory)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;no investments (this might be disallowed for non-profits anyway)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These guidelines will all help to tightly couple service and mission, and incentivize the organization to provide the best service possible to clients both directly and through legal representation of the group. My fear here is that if lack of money is limiting growth or not enough to pay people appropriately, the organization might come up with clever ways to make more money from clients, but in ways that don’t provide a lot of client value. I think this would mean that the guidelines are artificially limiting, and actually disservicing the mission and clients. The goal of these guidelines are to have the ‘right’ amount of money - enough for the mission to be successful, have traction and grow, but not so much that the wrong people are incentivized to lead, or that the organization choses to priorizite sources that give larger sums of money.&lt;/p&gt;

&lt;p&gt;That said, I believe the organization will need to be funded primarily through donations until it’s able to sustain itself through the services provided, hopefully no longer than a year or two.&lt;/p&gt;

&lt;h4 id=&quot;defining-policy-and-business-model&quot;&gt;Defining policy and business model&lt;/h4&gt;

&lt;p&gt;Much like other death-related medical procedures (is this true?), policy and business model will be necessarily coupled. I’ve outlined some of the questions that will need to be answered in the section ‘Outline of legal decisions to be made’. In the end, the law will determine the necessary business infrastructure and processes, but until then, we have to think about and build the process that we’re comfortable with. I believe making this a community-driven process will create the best outcome both legally and culturally. Ideally, the community gives input about what processes would be most helpful to them and their families. This inherently informs us of what processes should be legally required by law to ensure every assisted death is decided upon and carried out in a way that minimizes ambiguity and where everybody is in agreeance that this is what the patient wants. I also believe this communal agreeance on processes will help the law, which will necessitate the processes, get passed.&lt;/p&gt;

&lt;h4 id=&quot;education-and-townhalls&quot;&gt;Education and Townhalls&lt;/h4&gt;

&lt;p&gt;Education events and events where we receive feedback will mostly be a blurred line until the proposed policy and business models are better defined and in practice. I think the first year might look like a large, crowd-sourced, organized brainstorming session with a clear goal. While I believe that this bootstrapped business model will be a fruitful path to some form of legalized assisted dying for those with severe dementia, there are a lot of policy and business details that would be better decided by a community of interested parties. Additionally, educating and empowering others to contribute will help people be part of the mission, contribute to a brighter future, and be invested in the outcome. It’ll also increase the power behind the mission, both in numbers and passion. Lastly, even if I wrote the most optimal policy and submitted it today, I doubt it would pass. Historically, having a lot of motivated people behind a grassroots push for policy change has led to success (find source?).&lt;/p&gt;

&lt;p&gt;Proposed education topics:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;history of Death with Dignity&lt;/li&gt;
  &lt;li&gt;history of assisted death
    &lt;ul&gt;
      &lt;li&gt;old cultures that practice(d) it&lt;/li&gt;
      &lt;li&gt;when and why forbidden&lt;/li&gt;
      &lt;li&gt;where and how it’s still practiced&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;what we know so far about what this law would look like&lt;/li&gt;
  &lt;li&gt;history and timeline of similar laws&lt;/li&gt;
  &lt;li&gt;how to talk about this with their families / to other people&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Proposed feedback topics:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;what they would want out of this (maybe prior to coming to a session, give them some info, then have them think about what they would want the process to look like for them)&lt;/li&gt;
  &lt;li&gt;feedback about proposed process, or if they have new ideas for process&lt;/li&gt;
  &lt;li&gt;feedback from family members&lt;/li&gt;
  &lt;li&gt;feedback from religious groups&lt;/li&gt;
  &lt;li&gt;feedback from lawyers&lt;/li&gt;
  &lt;li&gt;feedback from doctors&lt;/li&gt;
  &lt;li&gt;feedback from counselors&lt;/li&gt;
  &lt;li&gt;feedback from all interested parties&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;services&quot;&gt;Services&lt;/h4&gt;

&lt;p&gt;As I’ve explained above, the main idea here is to bootstrap the passing of an assisted dying policy for those with severe dementia by providing prepatory services for those that may want to take advantage of such policy in the future, should the law pass. Those services will likely fall into the folowing categories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;legal support: preparing the individual and their family. I’m not sure if this will be standardized, or if individuals will required tailored legal documents. If legal requirements around assisted dying are invariable across all people, this could also look like consultation, and not directly provide any legal work, but inform and encourage clients and families to be legally prepared and protected. In this case, this service might look like group education sessions instead of individualized service.&lt;/li&gt;
  &lt;li&gt;medical check-ins: a schedule of dementia status check-ups. Could be once / decade or yearly, depending on the severity.&lt;/li&gt;
  &lt;li&gt;emotional support: individual and family support for this course. This could also be a decision check-in, to ensure that the client still wants this at every step of the way, and that there is no pressure from family or others to participate or not&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Other services might just be fostering and supporting a community for people to talk about this.&lt;/p&gt;

&lt;p&gt;Ultimately, the community will decide what services they want to receive.&lt;/p&gt;

&lt;p&gt;It’ll also be important to understand the financial and peoplepower needed to be successful in this mission, and design a business in a way that ensures this success. Because most of the value from these services is not guaranteed, and it’s received 10 - 20 years in the future, the payment for the services might be feel disportianately pricey. Maybe a better way to view funding for this mission is that we only take donations from those that are active participants in the community, and that the funding is provided equitably from all interested and dedicated parties.&lt;/p&gt;

&lt;p&gt;Overall, I think this is the section that could benefit from much more thought. What are other examples of services that are paid up front, but value isn’t delivered for 10 - 20 years? I don’t think that necessarily has to be the case, because I think that we can provide immediate value, and I really think that’s the key to success in any business, especially at the beginning. I think part of the immediate value proposition is the hope that, should you get severe dementia, you might have the option and be legally prepared to take advantage of it. Because of this idea, of getting people totally ‘legally’ prepared, prior to passing the law, is that if the law does get passed in the way intended, and those people meet the criteria of the law (through the legal prep work we’ve done), then they can take advantage of it. This really isn’t much different than any ‘maybe payoff’ except, it’s individually backed, and not backed through taxpayer money (space exploration, science).&lt;/p&gt;

&lt;h4 id=&quot;advocacy&quot;&gt;Advocacy&lt;/h4&gt;

&lt;p&gt;I think the advocacy will look similar to advocacy around other major policy change, like LGBTQ rights or marijuana legalization. It’s largely awareness and education. The difference here, is that it has the potential to be led by an older demographic, which stands out from other movements.&lt;/p&gt;</content><author><name></name></author><category term="idea" /><summary type="html">Expanding Assisted Dying Accessibility to those with Severe Dementia</summary></entry><entry><title type="html">Quicklearn Networking</title><link href="http://localhost:4000/quicklearn-networking" rel="alternate" type="text/html" title="Quicklearn Networking" /><published>2021-10-09T12:31:26-07:00</published><updated>2021-10-09T12:31:26-07:00</updated><id>http://localhost:4000/quicklearn-networking</id><content type="html" xml:base="http://localhost:4000/quicklearn-networking">&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;
&lt;p&gt;I just started a new job! We mostly work with &lt;a href=&quot;https://en.wikipedia.org/wiki/Wireless_ad_hoc_network&quot;&gt;MANET networks&lt;/a&gt;. These are wireless networks with non-stationary and unreliable nodes. There are generally no dedicated routers, and all devices are both clients and participate in routing.&lt;/p&gt;

&lt;p&gt;Anyway, because this is government contract work, we need to jump through lots of hoops to get certified with some security protocols including network security. The company is just three full-time people, one of those is me, and I probably have the most experience with networks and security, which isn’t much! (besides the two days / week contractor who seems very smart and capable)&lt;/p&gt;

&lt;p&gt;So short story, I need to get more familiar with networks. Both for app development and our internal IT.&lt;/p&gt;

&lt;p&gt;Side note: for our internal IT required security, there are a few resources we should tap into before trying to do this in-house:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;People have had to set up and follow these specific security requirements before. There are probably people we could hire with very deep domain expertise on how to set this up. Likely experts who have worked with companies of similar size before, too&lt;/li&gt;
  &lt;li&gt;The owners are part of a government incubator group, and they talk to the other companies. We could consult with them how they set up their systems for compliance. Setting up closed-source networking systems meant for large institutions seems daunting and like you can’t solve the problems from first principles.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In the past, I’ve set up what is essentially a home network on steroids, with mesh WiFi over 130 acres, VLANs, a VPN, multiple ISPs, wireless Ethernet connections, etc. I’ve also worked in government cybersecurity for a short contract. That said, I still don’t have a solid grasp of networking and security, and have a lot of knowledge gaps.&lt;/p&gt;

&lt;p&gt;Here I’m going to make a stream of consciousness post about what I learn as I quickly read through &lt;a href=&quot;https://jvns.ca/#computer-networking&quot;&gt;Julia Evans computer networking posts&lt;/a&gt;. I’m choosing to learn this way because she&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;is an excellent writer&lt;/li&gt;
  &lt;li&gt;uses both concrete practical examples (with tooling demos) and explains some theory&lt;/li&gt;
  &lt;li&gt;is very honest about what she knows and doesn’t, which makes it both approachable to learn from, and feels more like I’m learning this with a friend&lt;/li&gt;
  &lt;li&gt;I’m in a time crunch and they’re generally short posts&lt;/li&gt;
  &lt;li&gt;I don’t have a specific end goal yet, and this covers lots of topics in a non-abstract way&lt;/li&gt;
  &lt;li&gt;I want to have seen a lot of problems and solutions / tools before, so when I come across something similar, I know where to look&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;At work, all I know so far is that we have to setup a physical firewall, and that we can’t get a VPN (currently NordVPN) to work. And that these two combined are likely to cause more issues. This is my third day!&lt;/p&gt;

&lt;h2 id=&quot;current-questions&quot;&gt;Current questions&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Why do we need a physical firewall?&lt;/li&gt;
  &lt;li&gt;How is this different from other firewalls?&lt;/li&gt;
  &lt;li&gt;What do firewalls do, more specifically?&lt;/li&gt;
  &lt;li&gt;Do most home networks have firewalls?&lt;/li&gt;
  &lt;li&gt;How do firewalls interact with a VPN?&lt;/li&gt;
  &lt;li&gt;Why do we need a VPN for security?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’ll research these more thoroughly if the blog posts I’m reading don’t cover them.&lt;/p&gt;

&lt;h3 id=&quot;from-firewall-wiki&quot;&gt;From firewall wiki:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Seemingly three types:
    &lt;ul&gt;
      &lt;li&gt;software run on general purpose hardware&lt;/li&gt;
      &lt;li&gt;hardware-based (what does this mean?!)&lt;/li&gt;
      &lt;li&gt;virtual (maybe this is data that goes between a VM and native OS?)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Firewalls can be on a general purpose user computer and might be part of the operating system to handle incoming network packets&lt;/li&gt;
  &lt;li&gt;A packet filter is a basic firewall. It inspects packets and does one of three things:
    &lt;ul&gt;
      &lt;li&gt;silent discard&lt;/li&gt;
      &lt;li&gt;discard with ICMP (protocol for network devices (generally not end user devices), which can, I think, send a message back to the sender say it discarded the packet) or TCP reset (which is part of the TCP protocol, telling the sender to stop sending TCP messages)&lt;/li&gt;
      &lt;li&gt;forward packet to next hop&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;A packet filter can decide what to do based on info in the headers (source and destination IPs, protocol used, and ports)&lt;/li&gt;
  &lt;li&gt;There are also application-level firewalls called socket filters&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;post-summaries&quot;&gt;Post summaries&lt;/h2&gt;

&lt;h3 id=&quot;cdns-arent-just-for-caching&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2016/04/29/cdns-arent-just-for-caching/&quot;&gt;CDNs aren’t just for caching&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;A content delivery network (CDN) can cache. It sounds like the main use case is having multiple servers around the world hosting your website to shorten time required on the network to reach them. They have other uses, too, like:
    &lt;ul&gt;
      &lt;li&gt;speed up TLS / SSL (which I don’t know much about, but is a security protocol that requires a lot of back and forth between client and server)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;what-are-ssl-ciphers--session-keys&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2016/05/06/what-are-ssl-ciphers-and-session-keys/&quot;&gt;What are SSL ciphers &amp;amp; session keys?&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;RSA is a way to encrypt, but is very slow. Instead, we (SSL / TLS) use other encryption for messages called AES. Maybe we only use RSA to encrypt the keys, so that we only do the slow process once in a session, instead of for every message. This might be wrong!&lt;/li&gt;
  &lt;li&gt;When reading more about SSL / TLS:
    &lt;ul&gt;
      &lt;li&gt;Two goals: confidentiality - nobody else reads our messages, and integrity - both parties want to ensure the message is coming from who they think it is&lt;/li&gt;
      &lt;li&gt;symmetric means both sides have the same key, which is needed for the two goals above&lt;/li&gt;
      &lt;li&gt;asymmetric means the sides have different private keys. To do this they need to agree on a method for generating private keys.&lt;/li&gt;
      &lt;li&gt;in addition to the two goals, we also have to prevent an attacker resending a message twice. To do this, you need a new set of symmetric keys for each message.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;why-do-we-use-the-linux-kernels-tcp-stack&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2016/06/30/why-do-we-use-the-linux-kernels-tcp-stack/&quot;&gt;Why do we use the Linux kernel’s TCP stack?&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;the kernel has it’s own TCP stack that is generally used. You could also write your own TCP stack in ‘userspace’. I’ve wrote software to send TCP messages before. Was I doing this in ‘userspace’? My OS knowledge is also filled with holes (so I’ve been reading through &lt;a href=&quot;https://pdos.csail.mit.edu/6.828/2019/xv6/book-riscv-rev0.pdf&quot;&gt;this short OS book&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;it seems like a roll-your-own TCP stack can be faster because you have direct control how it runs. You can pick a CPU and just run it through. When dealing with the built-in kernel TCP stack, the OS can decide to run other processes concurrently, which means holding up the TCP process. I’m not sure if this is correct!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;how-do-http-requests-get-sent-to-the-right-place&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2016/07/14/whats-sni/&quot;&gt;How do HTTP requests get sent to the right place?&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;I’m learning how to make an HTTP request without curl using netcat (or nc). First you have to manually build the HTTP headers, then nc sends it as a TCP message to the specified IP and port (I think!)&lt;/li&gt;
  &lt;li&gt;A web server can host many websites, and uses HTTP headers to decide which one to route it to&lt;/li&gt;
  &lt;li&gt;NGINX and Apache are two different web servers (I kinda knew this, but have never set them up, and didn’t know what nginx was)&lt;/li&gt;
  &lt;li&gt;If web server hosts many different IPs / websites, and you have a single TCP connection, you can use the same SSL certificate for HTTP requests even if they are for different websites&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;why-do-udp-packets-get-dropped&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2016/08/24/find-out-where-youre-dropping-packets/&quot;&gt;Why do UDP packets get dropped?&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Server network card isn’t keeping up with the sending socket buffer&lt;/li&gt;
  &lt;li&gt;Normal dropped packets over the network (which is likely due to full router buffers)&lt;/li&gt;
  &lt;li&gt;Client application not ingesting from the receiving socket buffer fast enough&lt;/li&gt;
  &lt;li&gt;The socket man page was also helpful here. I didn’t know sockets had buffers before this, and that they are file descriptors (currently learning about fd in the OS book mentioned above)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;whats-interesting-about-udp&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2016/12/21/what-s-interesting-about-udp/&quot;&gt;What’s interesting about UDP?&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;DNS uses UDP, mostly because DNS requests are small, so no need for multiple packets. Application side handles retransmission if there’s no reply. Large DNS responses may still use TCP&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dissecting-an-ssl-certificate&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2017/01/31/whats-tls/&quot;&gt;Dissecting an SSL certificate&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;I have SSL certs on my computer at /etc/ssl/certs/&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;how-big-can-a-packet-get&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2017/02/07/mtu/&quot;&gt;How big can a packet get?&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;UDP packet size can be really big, but Ethernet frame sizes are smaller, which is called MTU. So if you send a UDP packet bigger than the MTU, either it’s dropped or it’s fragmented (like TCP). Unclear how it’s reassembled on other side, especially if some get dropped&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;slow-down-your-internet-with-tc&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2017/04/01/slow-down-your-internet-with-tc/&quot;&gt;Slow down your internet with tc&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;you can add network latency (on a specific network interface)&lt;/li&gt;
  &lt;li&gt;HTTPS/2 can be much faster than HTTP because it does more requests in parallel, even though it has the added TLS handshake&lt;/li&gt;
  &lt;li&gt;questions: Does SSH use TCP? Or is SSH it’s own protocol in the same axis as TCP?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;netdev-conference-day-1&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2017/04/06/netdev-2-1/&quot;&gt;netdev conference, day 1&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;one way to do DDOS mitigation:
    &lt;ol&gt;
      &lt;li&gt;sample packets, and send those samples elsewhere to find patterns on them (unsupervised machine learning?)&lt;/li&gt;
      &lt;li&gt;come up with rules from those patterns, and code the rules&lt;/li&gt;
      &lt;li&gt;to actually block use:&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;iptables. I didn’t know what this is, but turns out is has a lot to do with firewalls! (which is what I need to know about this week). From the man pages:
 	- iptables seems like a flowchart, and if packets match a certain pattern, then you send it down that flowchart branch
    &lt;ul&gt;
      &lt;li&gt;at each node, the packet can be ACCEPT, DROP, or RETURN. RETURN just goes to the next pattern to match against (this could be wrong)&lt;/li&gt;
      &lt;li&gt;there are 5 tables. Kernel settings determine which one(s) are active&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;userspace (not sure of upsides or pitfalls)&lt;/li&gt;
  &lt;li&gt;XDP which sounds like it’s a new thing to do packet filtering right off of the network card. This way you avoid the kernel and userspace apparently. Good for very fast filtering&lt;/li&gt;
  &lt;li&gt;using XDP at Facebook for load balancing and DDOS mitigation. I don’t really get load balancing (I can vaguely infer!)&lt;/li&gt;
  &lt;li&gt;you can use tc on a router to rate limit from a certain MAC address&lt;/li&gt;
  &lt;li&gt;you can use tc on a router to do what the kernel would normally do with packets, like checksum. This could take load off the end CPU and put it on the router&lt;/li&gt;
  &lt;li&gt;a ‘page’ is a segment of memory for an OS. I think a process has virtual memory which is a page&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;how-to-filter-packets-super-fast-xdp--ebpf&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2017/04/07/xdp-bpf-tutorial/&quot;&gt;How to filter packets super fast: XDP &amp;amp; eBPF!&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;XDP programs use data structures from the kernel (which I remember being an uncommon thing to do, or impossible from userspace) to parse the Ethernet header&lt;/li&gt;
  &lt;li&gt;they loaded the compiled file into the kernel from userspace somehow (I think)&lt;/li&gt;
  &lt;li&gt;you can check if it loaded by looking at info about network interfaces. I can check it by running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ip link list&lt;/code&gt;. When I run this I notice &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mtu&lt;/code&gt; on all interfaces, which is probably Maximum Transmission Unit. XDP is running on that interface if it says &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xdp&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;im-going-to-skip-netdev-conf-day-2-and-3-for-now-mostly-because-this-is-a-reach-for-julia-somebody-whos-familiar-with-networking-so-its-an-extra-reach-for-me-and-more-of-a-depth-than-breath-approach-on-these-niche-topics&quot;&gt;I’m going to skip netdev conf day 2 and 3 for now. Mostly because this is a reach for Julia, somebody who’s familiar with networking, so it’s an extra reach for me, and more of a depth than breath approach on these niche topics.&lt;/h4&gt;

&lt;h3 id=&quot;iptables-basics&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2017/06/07/iptables-basics/&quot;&gt;Iptables basics&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;I’m excited about this because this relates to firewalls, which I’m trying to learn more about&lt;/li&gt;
  &lt;li&gt;cool visual to &lt;a href=&quot;https://images.app.goo.gl/K9oFPe5jjF3kyTh96&quot;&gt;iptables flowchart&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I can look at the iptable rules with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo iptables -L -t nat&lt;/code&gt; (replace nat with any other table)&lt;/li&gt;
  &lt;li&gt;SNAT and MASQUERADE: I think is so when you send / receive packets outside your LAN, the firewall uses it’s IP address and when packets come in, somehow it knows which LAN IP to send it to. When sending / receiving packets on WAN, it looks like they’re all coming from the same IP even though you might have many IPs on your LAN. Then how does your firewall / router know which IP to send to? The WAN packets must have your LAP IP, or just some sort of ID that your router / firewall maps to your LAN IP&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;whats-a-network-interface&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2017/09/03/network-interfaces/&quot;&gt;What’s a network interface?&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;you can create a network namespace (what does this have to do with userspace? just coincidentally similar name?)&lt;/li&gt;
  &lt;li&gt;a network namespace is a copy of the network stack. It has it’s own routes, firewall rules, and network devices&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nc -l 8000&lt;/code&gt; will just create a server(?) that listens on port 8000&lt;/li&gt;
  &lt;li&gt;by default, ifconfig only shows active (up) interfaces&lt;/li&gt;
  &lt;li&gt;I created a new network namespace and connected it to a network interface. But now I seem stuck inside that network namespace. Is this nested under the default network namespace? Or parallel to it? When I rebooted it disappeared and seem to be in the default network namespace&lt;/li&gt;
  &lt;li&gt;when sending a packet to an IP address, the route table decides which interface the packet goes through. Then if you’re running tcpdump, this is where it reads from (once attached to interface)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;finding-out-ifwhy-a-server-is-dropping-packets&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2017/09/05/finding-out-where-packets-are-being-dropped/&quot;&gt;Finding out if/why a server is dropping packets&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;netstat -i&lt;/code&gt; reports the MTU of each interface. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lo&lt;/code&gt; reports MTU size of a UDP packet max size, which I though was weird because I thought the MTU for any network connection was 1500 limited by the Ethernet protocol. Turns out &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lo&lt;/code&gt; is for local (on your own computer) networking&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;a-few-things-ive-learned-about-computer-networking&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2018/03/05/things-ive-learned-networking/&quot;&gt;A few things I’ve learned about computer networking&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;this post was useful to understand how somebody else has come to understand computer networking and make me feel less bad about not knowing much about it. This exercise of going through Julia’s networking posts has been super useful for building a framework, but I’m sure it helps a ton that I’ve had experience running into networking problems head on (even if I didn’t have any framework to understand how to solve them). I had one technical co-worker and they would guide me in the right direction&lt;/li&gt;
  &lt;li&gt;in reading a separate post about building a tcp stack in python (building and sending SYN and ACK messages), it says you can tell your router to route packets addressed to a random IP to your computer (via your MAC address). This is so you can bypass your kernels TCP stack if your building your own application level TCP stack. And in the post it says that you computer will receive those packets meant for the random IP (but routed to your computer from the router). And supposedly your application will receive them. My question is how they get to the port? Why isn’t the kernel rejecting them? Maybe LAN routing is done with MAC regardless. So the kernel doesn’t process the packet because it’s a different IP, but since MAC takes priority here, the packet still gets digested by the port / application TCP stack.&lt;/li&gt;
  &lt;li&gt;I can use tcpdump to see packets dropped from iptables. This might be useful when debugging the firewall / VPN issue at work! (is a deep dive on working with tcpdump in my horizon? I’ve know about it for a few years but never really had to work with it)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;reflections-update&quot;&gt;Reflections update:&lt;/h3&gt;
&lt;p&gt;I’m part way through, and I already feel like I’ve learned a ton, especially in my quest to have a framework to understand some of the questions I posted in the beginning. I’ll kinda answer them now&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Why do we need a physical firewall?
    &lt;ul&gt;
      &lt;li&gt;my guess would be to have hardware to do firewall stuff faster and maybe have software like XDP. It might also be a closed-source, no root access / no OS, government thing to both have a physical separate device before your router / modem, and so that there’s a firewall that can’t be tampered with, as long as it’s in place.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;How is this different from other firewalls?
    &lt;ul&gt;
      &lt;li&gt;I’d guess it doesn’t work in any very different / novel way than other firewalls. Answer above covers this&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;What do firewalls do, more specifically?
    &lt;ul&gt;
      &lt;li&gt;filter packets based on rules around packet headers (I think IP and TCP headers mostly). They can do this in the kernel (iptables?), in userspace, or before the kernel and after the NIC, like XDP. Firewalls can also have systems for dynamically establishing rules based on pattern. This might be part of why we need all of our traffic to go through a VPN. Because the VPN can have the infrastructure to do dynamic firewall rules (it might require lots / fast machines to find the patterns in the packets to block). But you could also have local firewall rules, and just outsource the feature that finds malicious packet patterns and creates rules, then send those rules back to the firewall. But because that requires a network connection, you could be DDoSed or something and not be able to receive the updated rules&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Do most home networks have firewalls?
    &lt;ul&gt;
      &lt;li&gt;I don’t know, but probably? It seems like at least basic rules would exist on a router and probably even baked in to most OSes&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;How do firewalls interact with a VPN?
    &lt;ul&gt;
      &lt;li&gt;A packet through a VPN probably has certain characteristics. If the firewall doesn’t like that, then it’ll drop&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Why do we need a VPN for security?
    &lt;ul&gt;
      &lt;li&gt;Answered above. Maybe they have their own firewall that traffic hits before it goes to us. This way you can more so guarantee that traffic in and out of the office goes through at minimum the VPN firewall&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;If I have to debug firewall (and VPN) stuff, I think my main task will be to understand how people use tcpdump and other cli tools to understand why packets are being dropped by iptables (or maybe more specific physical firewall stuff like XDP, too).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;how-i-use-wireshark&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2018/06/19/what-i-use-wireshark-for/&quot;&gt;How I use Wireshark&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;workflow ex. use tcpdump and save output in a file. Open wireshark
with that file&lt;/li&gt;
  &lt;li&gt;see what happened in a single TCP connection&lt;/li&gt;
  &lt;li&gt;“cast” a packet to a certain protocol / type of traffic&lt;/li&gt;
  &lt;li&gt;look at headers in english or as raw bytes&lt;/li&gt;
  &lt;li&gt;search for things like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tcp.port == 443&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;uses stats to find a tcp session that was super long&lt;/li&gt;
  &lt;li&gt;helps make networking concepts concrete because you can physically see
it happening&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="work" /><category term="networking" /><summary type="html">Background I just started a new job! We mostly work with MANET networks. These are wireless networks with non-stationary and unreliable nodes. There are generally no dedicated routers, and all devices are both clients and participate in routing.</summary></entry><entry><title type="html">Getting money from the stock market</title><link href="http://localhost:4000/money" rel="alternate" type="text/html" title="Getting money from the stock market" /><published>2021-09-09T23:31:40-07:00</published><updated>2021-09-09T23:31:40-07:00</updated><id>http://localhost:4000/getting-money-from-the-stock-market</id><content type="html" xml:base="http://localhost:4000/money">&lt;p&gt;I recently started a contract to build a high-frequency trading bot. I’ll use this to document the experience, engineering workflow, daily work, exciting breakthroughs, difficult problems, etc.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/tradingBotArchitecture.jpeg&quot; alt=&quot;proposed architecture&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Proposed software architecture&lt;/p&gt;

&lt;h3 id=&quot;background&quot;&gt;Background&lt;/h3&gt;
&lt;p&gt;Somebody saw I had some hobby Haskell experience, so he contacted me about building a high-frequency securities trading bot in a functional language. He currently has an implementation in python that he built with a small team over the last 2 - 3 years. It’s a well-built code base, but ran into speed issues, so couldn’t compete in the markets. He said they’ve tried to speed up the processes using asyncIO and PyPy, but that it hasn’t been fruitful. The idea is to build it with a functional language because they better handle concurrency, and are just generally much faster compiled languages.&lt;/p&gt;

&lt;p&gt;I’ve never done this before. I’ve never had to work with threads, concurrency, etc., let alone a functional project of this size. I told him all of this, and he understands what I know, but we came to a mutual understanding of expectations and mutual confidence that we can get this done. This is a huge challenge, I’ll learn a lot, and am getting paid to do it. I’ll be responsible for a highly technical engineering project. I’m super excited and grateful, and definitely a little nervous.&lt;/p&gt;

&lt;p&gt;He has the domain expertise, experience from building something like this before, and the runway to fail smartly along the way. He’s also extremely energetic and passionate about the project.&lt;/p&gt;

&lt;h3 id=&quot;choice-of-language&quot;&gt;Choice of language&lt;/h3&gt;
&lt;p&gt;He wanted me to evaluate lots of languages. He’s not a functional programmer, but has read a lot about HFT and understands the project requirements and important metrics for evaluation. His requirements are that it’s in a fast, functional language (for concurrency). People also write safe, concurrent programs in Go, which isn’t functional, but I don’t know anything about Go, and he wants something functional, so we ruled out Go. Other languages include OCaml, Haskell, Erlang, Scala, Racket. His vision is to have a system written in lots of different functional languages, and become an oasis for functional programmers. Let’s start with one! I won’t go into details now, but we decided on Scala. I’ve used it a bit, it’s quicker to get something prototyped (because it’s less strict about side effects compared to Haskell), and has a big community. The idea is to build an MVP, understand some of the functional patterns needed, learn the domain, learn about concurrency. If we decide this language isn’t right after some time, well have learned a lot and will be able to port it to another functional language fairly quickly (in theory).&lt;/p&gt;

&lt;h3 id=&quot;project-description--background&quot;&gt;Project description / background&lt;/h3&gt;
&lt;p&gt;A high level overview, as my understanding now, is to read in real-time and historical market data about one or more &lt;a href=&quot;https://interactivebrokers.github.io/tws-api/contracts.html&quot;&gt;contracts&lt;/a&gt;, then do some analysis that will trigger a buy or sell event, or to take no action. The core of HFT is in the analysis and minimizing latency. Because analysis complexity and latency are at odds with each other on the axis of time, the art of HFT is finding the sweet spot along the axis of analysis and latency.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://interactivebrokers.github.io/tws-api/index.html&quot;&gt;Trader Workstation API&lt;/a&gt; is an interface to programmatically work on the markets. It has native Python support, which made it easy for their current code base to interface. It also has a Java API, but I didn’t want to deal with Java code, and found an open source Scala wrapper, &lt;a href=&quot;https://github.com/openquant/ibclient&quot;&gt;IBClient&lt;/a&gt;. It’s not documented, but matches the native API fairly closely.&lt;/p&gt;

&lt;p&gt;The Python code base relied on &lt;a href=&quot;https://ta-lib.org/&quot;&gt;TA-Lib&lt;/a&gt; for analysis. There are a few similar tools in Java, but haven’t found a Scala version, or a Scala wrapper.&lt;/p&gt;

&lt;p&gt;Interactive Brokers, or IB, allows access to something called a ‘paper’ account where you can make trades with fake money. This will be used for testing.&lt;/p&gt;

&lt;h4 id=&quot;plumbing-mvp-specification&quot;&gt;Plumbing MVP Specification&lt;/h4&gt;
&lt;p&gt;I’m defining the MVP to have the following features:
	- connect as a client to &lt;a href=&quot;https://www.interactivebrokers.com/en/index.php?f=1338&amp;amp;gclid=CjwKCAjwp_GJBhBmEiwALWBQk04pNFhZN2JOUWFd2qZxdH4lo_a4KR5L3wuTZop26-jMHRLA0sKHFhoCZjUQAvD_BwE&quot;&gt;Interactive Brokers&lt;/a&gt; 
	- create a contract
	- receive historical data for the contract
	- make a (dumb) buy decision
	- buy a security 
	- make a (dumb) sell decision
	- sell a product&lt;/p&gt;

&lt;p&gt;This will just be a show that the APIs are working and can be plumbed together. I’ll test this by viewing a change of dollar amount in the GUI for the paper account.&lt;/p&gt;

&lt;h3 id=&quot;post-1&quot;&gt;Post 1&lt;/h3&gt;
&lt;p&gt;I started with this project before I started writing this post, and up til now, I’ve been very sloppy with code and git. There have been many false starts as I deal with testing unsupported, open source IB client libraries. I’ve settled on a IB client wrapper, and have tested part of the API, so am confident that I can get something working with Scala now without having to use the native Java TWS API. I’m now at a place where I’ll use better SWE practices. I’ll keep a more detailed to-do list in the project git repo, but here I’ll overview status of features and bugs. I’ll start writing tests and practice some TDD after I’ve delivered the MVP.&lt;/p&gt;

&lt;p&gt;Currently, I have:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;connect as a client to IB&lt;/li&gt;
  &lt;li&gt;create a contract&lt;/li&gt;
  &lt;li&gt;receive historical data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next steps:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;make a buy and test&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;post-2&quot;&gt;Post 2&lt;/h3&gt;
&lt;p&gt;When the markets are down I can’t fully test my code. So I decided improve my workflow today instead. My dev environment quickly got out of hand and I was requiring too many terminal windows. I’ve used tmux before but it’s not second nature. I decided to use it to manage my workflow better. I created &lt;a href=&quot;https://github.com/aryzach/dotfiles/blob/master/tmux-dev&quot;&gt;tmux startup script&lt;/a&gt; to streamline the process, and it’s already really paying off. Would highly recommend!&lt;/p&gt;

&lt;p&gt;While it’s still the weekend and markets are down, I figured I’d spend time trying to find a Scala wrapper for ta-lib, or some other analysis library. This isn’t part of the plumbing MVP spec, but some kind of analysis is necessary for a full blown MVP.&lt;/p&gt;

&lt;h3 id=&quot;post-3&quot;&gt;Post 3&lt;/h3&gt;
&lt;p&gt;Buy and sell orders are showing up in the TWS GUI, so I know it’s partially working, but weren’t ‘transmitting’ because the order didn’t have an account allocated (the GUI was informing me about this issue). I didn’t know if this was a setting in the TWS GUI, or if it was exposed in the API. It turns out the Java native IB API allows orders to have an account, but the Scala wrapper I’m using didn’t expose that part of the Java API. Here’s the &lt;a href=&quot;https://github.com/openquant/ibclient/pull/2&quot;&gt;pull request&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The plumbing API is finished. Now Trading MVP.&lt;/p&gt;

&lt;h4 id=&quot;trading-mvp-spec&quot;&gt;Trading MVP Spec&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;synchronously and continuously do the following:&lt;/li&gt;
  &lt;li&gt;get historical data&lt;/li&gt;
  &lt;li&gt;get OBV from historical data&lt;/li&gt;
  &lt;li&gt;make a smarter buy / sell / hold decision from OBV info&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;project-is-on-hold&quot;&gt;Project is on hold&lt;/h3&gt;</content><author><name></name></author><category term="scala" /><category term="zio" /><category term="HFT" /><summary type="html">I recently started a contract to build a high-frequency trading bot. I’ll use this to document the experience, engineering workflow, daily work, exciting breakthroughs, difficult problems, etc.</summary></entry><entry><title type="html">Reimplementing ‘git clone’ with Scala / ZIO</title><link href="http://localhost:4000/reimplementing-git-clone-with-scala-zio" rel="alternate" type="text/html" title="Reimplementing ‘git clone’ with Scala / ZIO" /><published>2021-08-29T00:43:15-07:00</published><updated>2021-08-29T00:43:15-07:00</updated><id>http://localhost:4000/reimplementing-git-clone-with-scala-zio</id><content type="html" xml:base="http://localhost:4000/reimplementing-git-clone-with-scala-zio">&lt;p&gt;I’m reimplementing git clone in Scala based of &lt;a href=&quot;https://stefan.saasen.me/articles/git-clone-in-haskell-from-the-bottom-up&quot;&gt;this reimplementation in Haskell&lt;/a&gt;. My goals in order are:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Get more comfortable in Scala and ZIO, particularly in functional-styled Scala&lt;/li&gt;
  &lt;li&gt;Practice more formal / rigorous SWE ‘best practices’&lt;/li&gt;
  &lt;li&gt;Develop a better understanding of the internals of git&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;SWE practices I’ll follow:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Write unit tests before writing code (kinda TDD, but really the development is driven by the original blog post)&lt;/li&gt;
  &lt;li&gt;Only function-level comments (no in-function comments)&lt;/li&gt;
  &lt;li&gt;Self-commenting code (will likely follow naming convensions from the Haskell implementation)&lt;/li&gt;
  &lt;li&gt;Git commit often (no set rule, but after every function, major milestone, bug fix)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’ll break the project up into phases. Phase 1 is to complete the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Parse the clone url to extract the host, port and repository path information.&lt;/li&gt;
  &lt;li&gt;Connect to the git server via TCP using the native git transport protocol.&lt;/li&gt;
  &lt;li&gt;Negotiate the objects that need to be transferrered from the server to the client. This includes receiving the current state of the remote repository (in the form of a ref advertisement) that includes the refs the server has and for each ref the commit hash it points to.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;phase-1&quot;&gt;Phase 1&lt;/h2&gt;

&lt;h4 id=&quot;step-1-read-post-and-understand-at-a-high-level&quot;&gt;Step 1: Read post and understand at a high level&lt;/h4&gt;
&lt;p&gt;Half way through, the post became overwhelming. I decided to skim for a high level overview for the rest, and focus on a deep understanding of &lt;a href=&quot;https://stefan.saasen.me/articles/git-clone-in-haskell-from-the-bottom-up/#git-transport-and-pack-wire-protocol&quot;&gt;git transport and pack wire protocal&lt;/a&gt; so that I can start implementing that part of it.&lt;/p&gt;

&lt;h4 id=&quot;step-2-understand-first-requirement-and-build-one-test-for-it---ref-discovery&quot;&gt;Step 2: Understand first requirement, and build one test for it - Ref discovery&lt;/h4&gt;
&lt;p&gt;This will complete step 1 - 3 of the git clone process detailed in the original blog post&lt;/p&gt;

&lt;h4 id=&quot;step-3-write-code-to-pass-test&quot;&gt;Step 3: Write code to pass test&lt;/h4&gt;
&lt;p&gt;Done. I should probably write more tests for better coverage, but my goal is to get a working program quickly, not one that will be put in production / care about resiliency.&lt;/p&gt;

&lt;h4 id=&quot;step-4-write-ls-remote-function-this-uses-io-ill-start-using-zio-test-instead-of-scalatest&quot;&gt;Step 4: Write ls-remote function. This uses IO. I’ll start using zio-test instead of scalatest.&lt;/h4&gt;
&lt;p&gt;I moved all tests to use the zio-test framework. I’ll still figure out what the test for this should look like.&lt;/p&gt;

&lt;h4 id=&quot;step-5-ls-remote-sends-a-message-over-tcp-ill-have-to-learn-a-bit-about-how-tcp-works-the-actor-model-etc&quot;&gt;Step 5: ls-remote sends a message over TCP. I’ll have to learn a bit about how TCP works, the actor model, etc.&lt;/h4&gt;
&lt;p&gt;I’m reading about TCP / Akka actors on &lt;a href=&quot;https://stackoverflow.com/questions/33747858/akka-tcp-client-how-can-i-send-a-message-over-tcp-using-akka-actor&quot;&gt;stackoverflow&lt;/a&gt; and from the &lt;a href=&quot;https://doc.akka.io/docs/akka/snapshot/io-tcp.html?language=scala&quot;&gt;official docs&lt;/a&gt; to understand how I can send a TCP message in Scala. I think the ZIO environments I’ll need are System and maybe Blocking. I haven’t worked with either of these ZIO environments, so that’ll be fun to learn about!&lt;/p&gt;

&lt;h4 id=&quot;step-6-write-test-for-ls-remote&quot;&gt;Step 6: Write test for ls-remote&lt;/h4&gt;

&lt;h4 id=&quot;step-7-breaking-down-ls-remote&quot;&gt;Step 7: Breaking down ls-remote&lt;/h4&gt;
&lt;p&gt;I’m skipping the ls-remote test for now. I’m not quite sure yet how to write tests that depend on external services (like a local tcp / git server), let alone an network-dependent service. I was able to get a prototyped local version of ref discovery working with akka. AKA I can see the correct git info when I put up a local git server, and run my tcp client code. It’s not type-safe / functional / ZIO’d yet. It looks like there’s some ZIO socket info &lt;a href=&quot;https://zio.github.io/zio-nio/docs/essentials/essentials_sockets&quot;&gt;out there&lt;/a&gt;. I’m not sure if I’ll be able to use this, or be able to wrap my akka setup in ZIO. It seems like this is the bulk of ls-remote though.&lt;/p&gt;

&lt;h4 id=&quot;step-8-getting-my-actor-to-receive-info-needed-for-lsremote&quot;&gt;Step 8: Getting my actor to receive info (needed for lsRemote)&lt;/h4&gt;
&lt;p&gt;Before, I only had the actor ‘fire-and-forget’, so I wouldn’t get a response back. Now, lsRemote returns a Future, which is the return type of an ask. I’m still not super clear on the setup here. I’m not even sure how many actors I have, tbh, but something is working. I’ll have to dig deeper to really understand what’s going on here, and I’ll probably be able to prune the process from what it is now.&lt;/p&gt;

&lt;h3 id=&quot;this-is-on-hold-because-i-took-a-contract-job-building-a-high-frequency-securities-trading-bot-in-scala-here-are-some-notes-on-it&quot;&gt;This is on hold because I took a contract job building a high-frequency securities trading bot in Scala. Here are some &lt;a href=&quot;https://aryzach.github.io/money&quot;&gt;notes on it&lt;/a&gt;.&lt;/h3&gt;

&lt;h4 id=&quot;step-8-trying-out-zio-socket-channel-in-place-of-the-akka-actors&quot;&gt;Step 8: Trying out ZIO socket channel in place of the Akka actors&lt;/h4&gt;
&lt;p&gt;The HFT bot mentioned above is on hold, so I’m continuing with this project!&lt;/p&gt;

&lt;p&gt;The akka actors I was using to handle the TCP messages to and from the git server weren’t quite working how I needed them to. I was following &lt;a href=&quot;https://hmn.stackfinder.net/questions/45992575/how-to-reuse-akka-tcp-connection-to-write-messages&quot;&gt;this example&lt;/a&gt;. I was sending an ‘ask’ to the TCP client actor from outside the client system. This is supposed to create a Future. The TCP client actor was receiving a response and the ‘info’ messages containted the correct response from the git server, but then that wasn’t being passed to the Future outside of the actor system. When I tried to send a message to the ‘sender()’ (what I thought would be the outside-the-actor-system caller), I was getting a ‘deadLetters’ actor issue. So I moved on for now.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://doc.akka.io/docs/akka/current/io-tcp.html&quot;&gt;This official TCP client example&lt;/a&gt;, needs a ‘replies’ / ‘listener’ of type ActorRef passed to it. My hangup was that I didn’t know what to pass here, and how to use it. There’s not many great docs / examples / blog posts on Akka actors, and if I go the actor route and figure this out, I might make some content.&lt;/p&gt;

&lt;p&gt;When you send an ‘ask’ to an actor, you get back a Future. Because I’d like to use ZIO, the plan was to wrap the Future in a ‘ZIO.fromFuture’. Well, I was having trouble with the actor model, and I found this &lt;a href=&quot;https://zio.github.io/zio-nio/docs/essentials/essentials_sockets&quot;&gt;ZIO socket channel&lt;/a&gt;. I’m not sure if this will do what I want it to, namely connecting to the server, writing the request in packet line format to the socket, then reading the response from the socket. The source code has methods called ‘write’ and ‘read’, so I’m hoping I’m on the right track. So far, I’ve gotten it to compile, but the ‘write’ method I’m calling on &lt;a href=&quot;https://github.com/zio/zio-nio/blob/master/nio/src/main/scala/zio/nio/channels/AsynchronousChannel.scala&quot;&gt;AsynchronousSocketChannel&lt;/a&gt; doesn’t match the method call in the source code. Very suspicious!&lt;/p&gt;

&lt;p&gt;I also made my first pull request to ZIO! It’s just a minor documentation fix! &lt;a href=&quot;https://github.com/zio/zio-nio/pull/410&quot;&gt;Here it is&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;step-9-tcp-reflections&quot;&gt;Step 9: TCP reflections&lt;/h4&gt;
&lt;p&gt;When testing the akka TCP actor example, it seemed like overkill. I also didn’t spend the time to get it to work fully. I pivoted away from Akka for two reasons:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;It seemed like overkill. I’m sending one message and receiving one in response. My understanding of the main purpose of actors is to deal with concurrency (high volume and speed, and when there is possible coupling between parts of the system). They can be used for other purposes, but justs seemed like a lot of code for something I could do just as well with less abstraction&lt;/li&gt;
  &lt;li&gt;I read how ZIO and Akka solve similar problems in different ways. Because one goal is to gain familiarity with writing ZIO code and the ecosystem I decided to pursue that route. 
I pivoted away from ZIO for two other reasons:&lt;/li&gt;
  &lt;li&gt;I don’t really understand the use case, or what problem it’s solving&lt;/li&gt;
  &lt;li&gt;To get the example running, I had to alter it and it differed from both the documented example and the source code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Akka actor model seems like the canonical way in Scala to send and recieve TCP messages, but also complicated and overkill. While I want to gain more familiarity with the actor abstraction, how to use it, and understand what problems it solves, I want to move quicker through building this app. For now, I’m just going to use &lt;a href=&quot;https://www.py4u.net/discuss/21492&quot;&gt;Java sockets from this example&lt;/a&gt; to build from.&lt;/p&gt;</content><author><name></name></author><category term="ZIO" /><summary type="html">I’m reimplementing git clone in Scala based of this reimplementation in Haskell. My goals in order are:</summary></entry><entry><title type="html">Tetris with Cats -&amp;gt; Snake with ZIO</title><link href="http://localhost:4000/ZIO-snake" rel="alternate" type="text/html" title="Tetris with Cats -&amp;gt; Snake with ZIO" /><published>2021-07-22T07:53:29-07:00</published><updated>2021-07-22T07:53:29-07:00</updated><id>http://localhost:4000/tetris-with-cats-to-snake-with-ZIO</id><content type="html" xml:base="http://localhost:4000/ZIO-snake">&lt;p&gt;&lt;img src=&quot;images/snake.gif&quot; alt=&quot;snake example gif&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/aryzach/snake-console-game-scala-ZIO&quot;&gt;git repo&lt;/a&gt;)
(&lt;a href=&quot;https://github.com/lpld/simple-games&quot;&gt;original project that this is modified from&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;I wanted to learn to work with ZIO because the job I’m hoping to start uses it heavily. Their code base also has some Cats Effect code. My goal here was to port this Cats-based FP Tetris console game to a ZIO-based console game. This is a daily log of the progress, hurdles, and thoughts.&lt;/p&gt;

&lt;h3 id=&quot;entry-1&quot;&gt;Entry 1&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;change scala version in build.sbt&lt;/li&gt;
  &lt;li&gt;still wasn’t running, debugged RectRegion, so now only one type of block shows&lt;/li&gt;
  &lt;li&gt;few other small bugs to get it running&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;entry-2&quot;&gt;Entry 2&lt;/h3&gt;
&lt;p&gt;I’ll start by just trying to get all piece shapes back in the game. When debugging, I cound this fragment:&lt;/p&gt;

&lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;allPossiblePieces&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Seq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;RectRegion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; 
	&lt;span class=&quot;c1&quot;&gt;// is this a monoid?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;multF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; 
  	&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;times&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;foldLeft&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;identity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;andThen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The comment “is this a monoid?” tells me I’m in a good place, because it shows me the original writer understands these concepts just a little better than I do, so hopefully this excersise will push me to their level.&lt;/p&gt;

&lt;p&gt;(I later scrapped the tetris idea and decided to tear it down further and make the snake game)&lt;/p&gt;

&lt;h3 id=&quot;entry-3&quot;&gt;Entry 3&lt;/h3&gt;

&lt;p&gt;Porting a lot of the project was much more straight forward than I thought it’d be. I spent time reading ZIO and Cats docs, and testing out some Cats types / methods to understand how they work. The ZIO discord was invaluable to help with my newbie questions.&lt;/p&gt;

&lt;p&gt;In the following, the State[Ansi, Unit] type and traverse method are from Cats libraries. I wanted to convert it to ZIO.&lt;/p&gt;

&lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;printAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Ansi&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;printLinesAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Ansi&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; 
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;zipWithIndex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;traverse&lt;/span&gt; 
			&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;printAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Which resulted in this (complements to @adamfraser on discord):&lt;/p&gt;

&lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;DrawCommand&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Ansi&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;printLinesAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Ansi&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;zipWithIndex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;forEach&lt;/span&gt; 
			&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;printAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This uses State from zio.prelude.&lt;/p&gt;

&lt;p&gt;This code is nearly identical to the original, but I had trouble understanding how the State return type was built up here, and how the result of the ‘lines.zipWithIndex.forEach…..’ computed value was was not thrown away with the underscore and just yielding unit. &lt;a href=&quot;https://www.slideshare.net/pjschwarz/state-monad-212839068&quot;&gt;This slideshow&lt;/a&gt; was super valuable, and the confusion can be simplified by painstakingly desugarring the for comprehension and State flatMap / map definitions. Ultimitaly, map and flatMap are defined in a less immediately intuitive way for State compared to the more familiar List, Option, and Either monads.&lt;/p&gt;

&lt;h3 id=&quot;entry-4&quot;&gt;Entry 4&lt;/h3&gt;

&lt;p&gt;After the snake eats food, you need a new food position, ideally a random position. With the software structure from the tetris game, namely the function to compute the next state from the current one, I was having difficulty using ZIO[Random, …, …] like I had in previous ZIO exersize projects. Because I had the infrastructure of streams already baked into the ‘next state’ functionality, I decided that instead of just a timed tick, I’d stream a new random position each tick, and only use the position if the snake ate food.&lt;/p&gt;

&lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Random food&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;foodStream&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ZStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Random&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Nothing&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Food&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; 
	&lt;span class=&quot;nv&quot;&gt;ZStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;repeatEffect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;nextIntBounded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;nextIntBounded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Food&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 

&lt;span class=&quot;c1&quot;&gt;// Regular ticks&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tick&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ZStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Clock&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Nothing&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; 
	&lt;span class=&quot;nv&quot;&gt;ZStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;tick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;125.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;millis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Timed Food&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tickedFood&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ZStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Clock&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Random&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Nothing&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Food&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; 
	&lt;span class=&quot;nv&quot;&gt;tick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;foodStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;_2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// User's interactions&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;userMoves&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ZStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Console&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;IOException&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;UserAction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; 
	&lt;span class=&quot;nv&quot;&gt;interactions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserAction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// merge them&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;allEvents&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ZStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Console&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Clock&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Random&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;IOException&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; 
	&lt;span class=&quot;n&quot;&gt;tickedFood&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;merge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userMoves&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;states&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ZStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Console&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Clock&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Random&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;IOException&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;GameState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; 
	&lt;span class=&quot;nv&quot;&gt;allEvents&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initialState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nextState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;states&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;takeWhile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I’m not sure if this is more or less efficient than doing an IO random call only when needed (when the snake ate food). I don’t know enough about how streams work. If any stream that can be precomputed precomputes with a lot of values, it might be more efficient than doing ‘random IO’ only when needed. Regardless, it probably doesn’t matter at all for this app, and it’s prematurely optimizing. But it’s fun to think about!&lt;/p&gt;

&lt;p&gt;Now the game is largely feature complete. It’s not a full snake game, because it never ends and you never lose, but it’s all ported to ZIO, which was my main learning goal.&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry></feed>