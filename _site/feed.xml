<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-10-10T18:43:32-07:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Zach Blog</title><subtitle>Zach Blog Engineering Functional Programming Types Management Robotics
</subtitle><entry><title type="html">Quicklearn Networking</title><link href="http://localhost:4000/quicklearn-networking" rel="alternate" type="text/html" title="Quicklearn Networking" /><published>2021-10-09T12:31:26-07:00</published><updated>2021-10-09T12:31:26-07:00</updated><id>http://localhost:4000/quicklearn-networking</id><content type="html" xml:base="http://localhost:4000/quicklearn-networking">&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;
&lt;p&gt;I just started a new job! We mostly work with &lt;a href=&quot;https://en.wikipedia.org/wiki/Wireless_ad_hoc_network&quot;&gt;MANET networks&lt;/a&gt;. These are wireless networks with non-stationary and unreliable nodes. There are generally no dedicated routers, and all devices are both clients and participate in routing.&lt;/p&gt;

&lt;p&gt;Anyway, because this is government contract work, we need to jump through lots of hoops to get certified with some security protocols including network security. The company is just three full-time people, one of those is me, and I probably have the most experience with networks and security, which isn’t much! (besides the two days / week contractor who seems very smart and capable)&lt;/p&gt;

&lt;p&gt;So short story, I need to get more familiar with networks. Both for app development and our internal IT.&lt;/p&gt;

&lt;p&gt;Side note: for our internal IT required security, there are a few resources we should tap into before trying to do this in-house:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;People have had to set up and follow these specific security requirements before. There are probably people we could hire with very deep domain expertise on how to set this up. Likely experts who have worked with companies of similar size before, too&lt;/li&gt;
  &lt;li&gt;The owners are part of a government incubator group, and they talk to the other companies. We could consult with them how they set up their systems for compliance. Setting up closed-source networking systems meant for large institutions seems daunting and like you can’t solve the problems from first principles.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In the past, I’ve set up what is essentially a home network on steroids, with mesh WiFi over 130 acres, VLANs, a VPN, multiple ISPs, wireless Ethernet connections, etc. I’ve also worked in government cybersecurity for a short contract. That said, I still don’t have a solid grasp of networking and security, and have a lot of knowledge gaps.&lt;/p&gt;

&lt;p&gt;Here I’m going to make a stream of consciousness post about what I learn as I quickly read through &lt;a href=&quot;https://jvns.ca/#computer-networking&quot;&gt;Julia Evans computer networking posts&lt;/a&gt;. I’m choosing to learn this way because she&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;is an excellent writer&lt;/li&gt;
  &lt;li&gt;uses both concrete practical examples (with tooling demos) and explains some theory&lt;/li&gt;
  &lt;li&gt;is very honest about what she knows and doesn’t, which makes it both approachable to learn from, and feels more like I’m learning this with a friend&lt;/li&gt;
  &lt;li&gt;I’m in a time crunch and they’re generally short posts&lt;/li&gt;
  &lt;li&gt;I don’t have a specific end goal yet, and this covers lots of topics in a non-abstract way&lt;/li&gt;
  &lt;li&gt;I want to have seen a lot of problems and solutions / tools before, so when I come across something similar, I know where to look&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;At work, all I know so far is that we have to setup a physical firewall, and that we can’t get a VPN (currently NordVPN) to work. And that these two combined are likely to cause more issues. This is my third day!&lt;/p&gt;

&lt;h2 id=&quot;current-questions&quot;&gt;Current questions&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Why do we need a physical firewall?&lt;/li&gt;
  &lt;li&gt;How is this different from other firewalls?&lt;/li&gt;
  &lt;li&gt;What do firewalls do, more specifically?&lt;/li&gt;
  &lt;li&gt;Do most home networks have firewalls?&lt;/li&gt;
  &lt;li&gt;How do firewalls interact with a VPN?&lt;/li&gt;
  &lt;li&gt;Why do we need a VPN for security?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’ll research these more thoroughly if the blog posts I’m reading don’t cover them.&lt;/p&gt;

&lt;h3 id=&quot;from-firewall-wiki&quot;&gt;From firewall wiki:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Seemingly three types:
    &lt;ul&gt;
      &lt;li&gt;software run on general purpose hardware&lt;/li&gt;
      &lt;li&gt;hardware-based (what does this mean?!)&lt;/li&gt;
      &lt;li&gt;virtual (maybe this is data that goes between a VM and native OS?)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Firewalls can be on a general purpose user computer and might be part of the operating system to handle incoming network packets&lt;/li&gt;
  &lt;li&gt;A packet filter is a basic firewall. It inspects packets and does one of three things:
    &lt;ul&gt;
      &lt;li&gt;silent discard&lt;/li&gt;
      &lt;li&gt;discard with ICMP (protocol for network devices (generally not end user devices), which can, I think, send a message back to the sender say it discarded the packet) or TCP reset (which is part of the TCP protocol, telling the sender to stop sending TCP messages)&lt;/li&gt;
      &lt;li&gt;forward packet to next hop&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;A packet filter can decide what to do based on info in the headers (source and destination IPs, protocol used, and ports)&lt;/li&gt;
  &lt;li&gt;There are also application-level firewalls called socket filters&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;post-summaries&quot;&gt;Post summaries&lt;/h2&gt;

&lt;h3 id=&quot;cdns-arent-just-for-caching&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2016/04/29/cdns-arent-just-for-caching/&quot;&gt;CDNs aren’t just for caching&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;A content delivery network (CDN) can cache. It sounds like the main use case is having multiple servers around the world hosting your website to shorten time required on the network to reach them. They have other uses, too, like:
    &lt;ul&gt;
      &lt;li&gt;speed up TLS / SSL (which I don’t know much about, but is a security protocol that requires a lot of back and forth between client and server)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;what-are-ssl-ciphers--session-keys&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2016/05/06/what-are-ssl-ciphers-and-session-keys/&quot;&gt;What are SSL ciphers &amp;amp; session keys?&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;RSA is a way to encrypt, but is very slow. Instead, we (SSL / TLS) use other encryption for messages called AES. Maybe we only use RSA to encrypt the keys, so that we only do the slow process once in a session, instead of for every message. This might be wrong!&lt;/li&gt;
  &lt;li&gt;When reading more about SSL / TLS:
    &lt;ul&gt;
      &lt;li&gt;Two goals: confidentiality - nobody else reads our messages, and integrity - both parties want to ensure the message is coming from who they think it is&lt;/li&gt;
      &lt;li&gt;symmetric means both sides have the same key, which is needed for the two goals above&lt;/li&gt;
      &lt;li&gt;asymmetric means the sides have different private keys. To do this they need to agree on a method for generating private keys.&lt;/li&gt;
      &lt;li&gt;in addition to the two goals, we also have to prevent an attacker resending a message twice. To do this, you need a new set of symmetric keys for each message.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;why-do-we-use-the-linux-kernels-tcp-stack&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2016/06/30/why-do-we-use-the-linux-kernels-tcp-stack/&quot;&gt;Why do we use the Linux kernel’s TCP stack?&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;the kernel has it’s own TCP stack that is generally used. You could also write your own TCP stack in ‘userspace’. I’ve wrote software to send TCP messages before. Was I doing this in ‘userspace’? My OS knowledge is also filled with holes (so I’ve been reading through &lt;a href=&quot;https://pdos.csail.mit.edu/6.828/2019/xv6/book-riscv-rev0.pdf&quot;&gt;this short OS book&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;it seems like a roll-your-own TCP stack can be faster because you have direct control how it runs. You can pick a CPU and just run it through. When dealing with the built-in kernel TCP stack, the OS can decide to run other processes concurrently, which means holding up the TCP process. I’m not sure if this is correct!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;how-do-http-requests-get-sent-to-the-right-place&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2016/07/14/whats-sni/&quot;&gt;How do HTTP requests get sent to the right place?&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;I’m learning how to make an HTTP request without curl using netcat (or nc). First you have to manually build the HTTP headers, then nc sends it as a TCP message to the specified IP and port (I think!)&lt;/li&gt;
  &lt;li&gt;A web server can host many websites, and uses HTTP headers to decide which one to route it to&lt;/li&gt;
  &lt;li&gt;NGINX and Apache are two different web servers (I kinda knew this, but have never set them up, and didn’t know what nginx was)&lt;/li&gt;
  &lt;li&gt;If web server hosts many different IPs / websites, and you have a single TCP connection, you can use the same SSL certificate for HTTP requests even if they are for different websites&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;why-do-udp-packets-get-dropped&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2016/08/24/find-out-where-youre-dropping-packets/&quot;&gt;Why do UDP packets get dropped?&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Server network card isn’t keeping up with the sending socket buffer&lt;/li&gt;
  &lt;li&gt;Normal dropped packets over the network (which is likely due to full router buffers)&lt;/li&gt;
  &lt;li&gt;Client application not ingesting from the receiving socket buffer fast enough&lt;/li&gt;
  &lt;li&gt;The socket man page was also helpful here. I didn’t know sockets had buffers before this, and that they are file descriptors (currently learning about fd in the OS book mentioned above)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;whats-interesting-about-udp&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2016/12/21/what-s-interesting-about-udp/&quot;&gt;What’s interesting about UDP?&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;DNS uses UDP, mostly because DNS requests are small, so no need for multiple packets. Application side handles retransmission if there’s no reply. Large DNS responses may still use TCP&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dissecting-an-ssl-certificate&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2017/01/31/whats-tls/&quot;&gt;Dissecting an SSL certificate&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;I have SSL certs on my computer at /etc/ssl/certs/&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;how-big-can-a-packet-get&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2017/02/07/mtu/&quot;&gt;How big can a packet get?&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;UDP packet size can be really big, but Ethernet frame sizes are smaller, which is called MTU. So if you send a UDP packet bigger than the MTU, either it’s dropped or it’s fragmented (like TCP). Unclear how it’s reassembled on other side, especially if some get dropped&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;slow-down-your-internet-with-tc&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2017/04/01/slow-down-your-internet-with-tc/&quot;&gt;Slow down your internet with tc&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;you can add network latency (on a specific network interface)&lt;/li&gt;
  &lt;li&gt;HTTPS/2 can be much faster than HTTP because it does more requests in parallel, even though it has the added TLS handshake&lt;/li&gt;
  &lt;li&gt;questions: Does SSH use TCP? Or is SSH it’s own protocol in the same axis as TCP?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;netdev-conference-day-1&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2017/04/06/netdev-2-1/&quot;&gt;netdev conference, day 1&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;one way to do DDOS mitigation:
    &lt;ol&gt;
      &lt;li&gt;sample packets, and send those samples elsewhere to find patterns on them (unsupervised machine learning?)&lt;/li&gt;
      &lt;li&gt;come up with rules from those patterns, and code the rules&lt;/li&gt;
      &lt;li&gt;to actually block use:&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;iptables. I didn’t know what this is, but turns out is has a lot to do with firewalls! (which is what I need to know about this week). From the man pages:
 	- iptables seems like a flowchart, and if packets match a certain pattern, then you send it down that flowchart branch
    &lt;ul&gt;
      &lt;li&gt;at each node, the packet can be ACCEPT, DROP, or RETURN. RETURN just goes to the next pattern to match against (this could be wrong)&lt;/li&gt;
      &lt;li&gt;there are 5 tables. Kernel settings determine which one(s) are active&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;userspace (not sure of upsides or pitfalls)&lt;/li&gt;
  &lt;li&gt;XDP which sounds like it’s a new thing to do packet filtering right off of the network card. This way you avoid the kernel and userspace apparently. Good for very fast filtering&lt;/li&gt;
  &lt;li&gt;using XDP at Facebook for load balancing and DDOS mitigation. I don’t really get load balancing (I can vaguely infer!)&lt;/li&gt;
  &lt;li&gt;you can use tc on a router to rate limit from a certain MAC address&lt;/li&gt;
  &lt;li&gt;you can use tc on a router to do what the kernel would normally do with packets, like checksum. This could take load off the end CPU and put it on the router&lt;/li&gt;
  &lt;li&gt;a ‘page’ is a segment of memory for an OS. I think a process has virtual memory which is a page&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;how-to-filter-packets-super-fast-xdp--ebpf&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2017/04/07/xdp-bpf-tutorial/&quot;&gt;How to filter packets super fast: XDP &amp;amp; eBPF!&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;XDP programs use data structures from the kernel (which I remember being an uncommon thing to do, or impossible from userspace) to parse the Ethernet header&lt;/li&gt;
  &lt;li&gt;they loaded the compiled file into the kernel from userspace somehow (I think)&lt;/li&gt;
  &lt;li&gt;you can check if it loaded by looking at info about network interfaces. I can check it by running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ip link list&lt;/code&gt;. When I run this I notice &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mtu&lt;/code&gt; on all interfaces, which is probably Maximum Transmission Unit. XDP is running on that interface if it says &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xdp&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;im-going-to-skip-netdev-conf-day-2-and-3-for-now-mostly-because-this-is-a-reach-for-julia-somebody-whos-familiar-with-networking-so-its-an-extra-reach-for-me-and-more-of-a-depth-than-breath-approach-on-these-niche-topics&quot;&gt;I’m going to skip netdev conf day 2 and 3 for now. Mostly because this is a reach for Julia, somebody who’s familiar with networking, so it’s an extra reach for me, and more of a depth than breath approach on these niche topics.&lt;/h4&gt;

&lt;h3 id=&quot;iptables-basics&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2017/06/07/iptables-basics/&quot;&gt;Iptables basics&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;I’m excited about this because this relates to firewalls, which I’m trying to learn more about&lt;/li&gt;
  &lt;li&gt;cool visual to &lt;a href=&quot;https://images.app.goo.gl/K9oFPe5jjF3kyTh96&quot;&gt;iptables flowchart&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I can look at the iptable rules with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo iptables -L -t nat&lt;/code&gt; (replace nat with any other table)&lt;/li&gt;
  &lt;li&gt;SNAT and MASQUERADE: I think is so when you send / receive packets outside your LAN, the firewall uses it’s IP address and when packets come in, somehow it knows which LAN IP to send it to. When sending / receiving packets on WAN, it looks like they’re all coming from the same IP even though you might have many IPs on your LAN. Then how does your firewall / router know which IP to send to? The WAN packets must have your LAP IP, or just some sort of ID that your router / firewall maps to your LAN IP&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;whats-a-network-interface&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2017/09/03/network-interfaces/&quot;&gt;What’s a network interface?&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;you can create a network namespace (what does this have to do with userspace? just coincidentally similar name?)&lt;/li&gt;
  &lt;li&gt;a network namespace is a copy of the network stack. It has it’s own routes, firewall rules, and network devices&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nc -l 8000&lt;/code&gt; will just create a server(?) that listens on port 8000&lt;/li&gt;
  &lt;li&gt;by default, ifconfig only shows active (up) interfaces&lt;/li&gt;
  &lt;li&gt;I created a new network namespace and connected it to a network interface. But now I seem stuck inside that network namespace. Is this nested under the default network namespace? Or parallel to it? When I rebooted it disappeared and seem to be in the default network namespace&lt;/li&gt;
  &lt;li&gt;when sending a packet to an IP address, the route table decides which interface the packet goes through. Then if you’re running tcpdump, this is where it reads from (once attached to interface)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;finding-out-ifwhy-a-server-is-dropping-packets&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2017/09/05/finding-out-where-packets-are-being-dropped/&quot;&gt;Finding out if/why a server is dropping packets&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;netstat -i&lt;/code&gt; reports the MTU of each interface. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lo&lt;/code&gt; reports MTU size of a UDP packet max size, which I though was weird because I thought the MTU for any network connection was 1500 limited by the Ethernet protocol. Turns out &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lo&lt;/code&gt; is for local (on your own computer) networking&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;a-few-things-ive-learned-about-computer-networking&quot;&gt;&lt;a href=&quot;https://jvns.ca/blog/2018/03/05/things-ive-learned-networking/&quot;&gt;A few things I’ve learned about computer networking&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;this post was useful to understand how somebody else has come to understand computer networking and make me feel less bad about not knowing much about it. This exercise of going through Julia’s networking posts has been super useful for building a framework, but I’m sure it helps a ton that I’ve had experience running into networking problems head on (even if I didn’t have any framework to understand how to solve them). I had one technical co-worker and they would guide me in the right direction&lt;/li&gt;
  &lt;li&gt;in reading a separate post about building a tcp stack in python (building and sending SYN and ACK messages), it says you can tell your router to route packets addressed to a random IP to your computer (via your MAC address). This is so you can bypass your kernels TCP stack if your building your own application level TCP stack. And in the post it says that you computer will receive those packets meant for the random IP (but routed to your computer from the router). And supposedly your application will receive them. My question is how they get to the port? Why isn’t the kernel rejecting them? Maybe LAN routing is done with MAC regardless. So the kernel doesn’t process the packet because it’s a different IP, but since MAC takes priority here, the packet still gets digested by the port / application TCP stack.&lt;/li&gt;
  &lt;li&gt;I can use tcpdump to see packets dropped from iptables. This might be useful when debugging the firewall / VPN issue at work! (is a deep dive on working with tcpdump in my horizon? I’ve know about it for a few years but never really had to work with it)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;reflections-update&quot;&gt;Reflections update:&lt;/h3&gt;
&lt;p&gt;I’m part way through, and I already feel like I’ve learned a ton, especially in my quest to have a framework to understand some of the questions I posted in the beginning. I’ll kinda answer them now&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Why do we need a physical firewall?
    &lt;ul&gt;
      &lt;li&gt;my guess would be to have hardware to do firewall stuff faster and maybe have software like XDP. It might also be a closed-source, no root access / no OS, government thing to both have a physical separate device before your router / modem, and so that there’s a firewall that can’t be tampered with, as long as it’s in place.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;How is this different from other firewalls?
    &lt;ul&gt;
      &lt;li&gt;I’d guess it doesn’t work in any very different / novel way than other firewalls. Answer above covers this&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;What do firewalls do, more specifically?
    &lt;ul&gt;
      &lt;li&gt;filter packets based on rules around packet headers (I think IP and TCP headers mostly). They can do this in the kernel (iptables?), in userspace, or before the kernel and after the NIC, like XDP. Firewalls can also have systems for dynamically establishing rules based on pattern. This might be part of why we need all of our traffic to go through a VPN. Because the VPN can have the infrastructure to do dynamic firewall rules (it might require lots / fast machines to find the patterns in the packets to block). But you could also have local firewall rules, and just outsource the feature that finds malicious packet patterns and creates rules, then send those rules back to the firewall. But because that requires a network connection, you could be DDoSed or something and not be able to receive the updated rules&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Do most home networks have firewalls?
    &lt;ul&gt;
      &lt;li&gt;I don’t know, but probably? It seems like at least basic rules would exist on a router and probably even baked in to most OSes&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;How do firewalls interact with a VPN?
    &lt;ul&gt;
      &lt;li&gt;A packet through a VPN probably has certain characteristics. If the firewall doesn’t like that, then it’ll drop&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Why do we need a VPN for security?
    &lt;ul&gt;
      &lt;li&gt;Answered above. Maybe they have their own firewall that traffic hits before it goes to us. This way you can more so guarantee that traffic in and out of the office goes through at minimum the VPN firewall&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="work" /><category term="networking" /><summary type="html">Background I just started a new job! We mostly work with MANET networks. These are wireless networks with non-stationary and unreliable nodes. There are generally no dedicated routers, and all devices are both clients and participate in routing.</summary></entry><entry><title type="html">Getting money from the stock market</title><link href="http://localhost:4000/money" rel="alternate" type="text/html" title="Getting money from the stock market" /><published>2021-09-09T23:31:40-07:00</published><updated>2021-09-09T23:31:40-07:00</updated><id>http://localhost:4000/getting-money-from-the-stock-market</id><content type="html" xml:base="http://localhost:4000/money">&lt;p&gt;I recently started a contract to build a high-frequency trading bot. I’ll use this to document the experience, engineering workflow, daily work, exciting breakthroughs, difficult problems, etc.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/tradingBotArchitecture.jpeg&quot; alt=&quot;proposed architecture&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Proposed software architecture&lt;/p&gt;

&lt;h3 id=&quot;background&quot;&gt;Background&lt;/h3&gt;
&lt;p&gt;Somebody saw I had some hobby Haskell experience, so he contacted me about building a high-frequency securities trading bot in a functional language. He currently has an implementation in python that he built with a small team over the last 2 - 3 years. It’s a well-built code base, but ran into speed issues, so couldn’t compete in the markets. He said they’ve tried to speed up the processes using asyncIO and PyPy, but that it hasn’t been fruitful. The idea is to build it with a functional language because they better handle concurrency, and are just generally much faster compiled languages.&lt;/p&gt;

&lt;p&gt;I’ve never done this before. I’ve never had to work with threads, concurrency, etc., let alone a functional project of this size. I told him all of this, and he understands what I know, but we came to a mutual understanding of expectations and mutual confidence that we can get this done. This is a huge challenge, I’ll learn a lot, and am getting paid to do it. I’ll be responsible for a highly technical engineering project. I’m super excited and grateful, and definitely a little nervous.&lt;/p&gt;

&lt;p&gt;He has the domain expertise, experience from building something like this before, and the runway to fail smartly along the way. He’s also extremely energetic and passionate about the project.&lt;/p&gt;

&lt;h3 id=&quot;choice-of-language&quot;&gt;Choice of language&lt;/h3&gt;
&lt;p&gt;He wanted me to evaluate lots of languages. He’s not a functional programmer, but has read a lot about HFT and understands the project requirements and important metrics for evaluation. His requirements are that it’s in a fast, functional language (for concurrency). People also write safe, concurrent programs in Go, which isn’t functional, but I don’t know anything about Go, and he wants something functional, so we ruled out Go. Other languages include OCaml, Haskell, Erlang, Scala, Racket. His vision is to have a system written in lots of different functional languages, and become an oasis for functional programmers. Let’s start with one! I won’t go into details now, but we decided on Scala. I’ve used it a bit, it’s quicker to get something prototyped (because it’s less strict about side effects compared to Haskell), and has a big community. The idea is to build an MVP, understand some of the functional patterns needed, learn the domain, learn about concurrency. If we decide this language isn’t right after some time, well have learned a lot and will be able to port it to another functional language fairly quickly (in theory).&lt;/p&gt;

&lt;h3 id=&quot;project-description--background&quot;&gt;Project description / background&lt;/h3&gt;
&lt;p&gt;A high level overview, as my understanding now, is to read in real-time and historical market data about one or more &lt;a href=&quot;https://interactivebrokers.github.io/tws-api/contracts.html&quot;&gt;contracts&lt;/a&gt;, then do some analysis that will trigger a buy or sell event, or to take no action. The core of HFT is in the analysis and minimizing latency. Because analysis complexity and latency are at odds with each other on the axis of time, the art of HFT is finding the sweet spot along the axis of analysis and latency.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://interactivebrokers.github.io/tws-api/index.html&quot;&gt;Trader Workstation API&lt;/a&gt; is an interface to programmatically work on the markets. It has native Python support, which made it easy for their current code base to interface. It also has a Java API, but I didn’t want to deal with Java code, and found an open source Scala wrapper, &lt;a href=&quot;https://github.com/openquant/ibclient&quot;&gt;IBClient&lt;/a&gt;. It’s not documented, but matches the native API fairly closely.&lt;/p&gt;

&lt;p&gt;The Python code base relied on &lt;a href=&quot;https://ta-lib.org/&quot;&gt;TA-Lib&lt;/a&gt; for analysis. There are a few similar tools in Java, but haven’t found a Scala version, or a Scala wrapper.&lt;/p&gt;

&lt;p&gt;Interactive Brokers, or IB, allows access to something called a ‘paper’ account where you can make trades with fake money. This will be used for testing.&lt;/p&gt;

&lt;h4 id=&quot;plumbing-mvp-specification&quot;&gt;Plumbing MVP Specification&lt;/h4&gt;
&lt;p&gt;I’m defining the MVP to have the following features:
	- connect as a client to &lt;a href=&quot;https://www.interactivebrokers.com/en/index.php?f=1338&amp;amp;gclid=CjwKCAjwp_GJBhBmEiwALWBQk04pNFhZN2JOUWFd2qZxdH4lo_a4KR5L3wuTZop26-jMHRLA0sKHFhoCZjUQAvD_BwE&quot;&gt;Interactive Brokers&lt;/a&gt; 
	- create a contract
	- receive historical data for the contract
	- make a (dumb) buy decision
	- buy a security 
	- make a (dumb) sell decision
	- sell a product&lt;/p&gt;

&lt;p&gt;This will just be a show that the APIs are working and can be plumbed together. I’ll test this by viewing a change of dollar amount in the GUI for the paper account.&lt;/p&gt;

&lt;h3 id=&quot;post-1&quot;&gt;Post 1&lt;/h3&gt;
&lt;p&gt;I started with this project before I started writing this post, and up til now, I’ve been very sloppy with code and git. There have been many false starts as I deal with testing unsupported, open source IB client libraries. I’ve settled on a IB client wrapper, and have tested part of the API, so am confident that I can get something working with Scala now without having to use the native Java TWS API. I’m now at a place where I’ll use better SWE practices. I’ll keep a more detailed to-do list in the project git repo, but here I’ll overview status of features and bugs. I’ll start writing tests and practice some TDD after I’ve delivered the MVP.&lt;/p&gt;

&lt;p&gt;Currently, I have:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;connect as a client to IB&lt;/li&gt;
  &lt;li&gt;create a contract&lt;/li&gt;
  &lt;li&gt;receive historical data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next steps:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;make a buy and test&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;post-2&quot;&gt;Post 2&lt;/h3&gt;
&lt;p&gt;When the markets are down I can’t fully test my code. So I decided improve my workflow today instead. My dev environment quickly got out of hand and I was requiring too many terminal windows. I’ve used tmux before but it’s not second nature. I decided to use it to manage my workflow better. I created &lt;a href=&quot;https://github.com/aryzach/dotfiles/blob/master/tmux-dev&quot;&gt;tmux startup script&lt;/a&gt; to streamline the process, and it’s already really paying off. Would highly recommend!&lt;/p&gt;

&lt;p&gt;While it’s still the weekend and markets are down, I figured I’d spend time trying to find a Scala wrapper for ta-lib, or some other analysis library. This isn’t part of the plumbing MVP spec, but some kind of analysis is necessary for a full blown MVP.&lt;/p&gt;

&lt;h3 id=&quot;post-3&quot;&gt;Post 3&lt;/h3&gt;
&lt;p&gt;Buy and sell orders are showing up in the TWS GUI, so I know it’s partially working, but weren’t ‘transmitting’ because the order didn’t have an account allocated (the GUI was informing me about this issue). I didn’t know if this was a setting in the TWS GUI, or if it was exposed in the API. It turns out the Java native IB API allows orders to have an account, but the Scala wrapper I’m using didn’t expose that part of the Java API. Here’s the &lt;a href=&quot;https://github.com/openquant/ibclient/pull/2&quot;&gt;pull request&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The plumbing API is finished. Now Trading MVP.&lt;/p&gt;

&lt;h4 id=&quot;trading-mvp-spec&quot;&gt;Trading MVP Spec&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;synchronously and continuously do the following:&lt;/li&gt;
  &lt;li&gt;get historical data&lt;/li&gt;
  &lt;li&gt;get OBV from historical data&lt;/li&gt;
  &lt;li&gt;make a smarter buy / sell / hold decision from OBV info&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;project-is-on-hold&quot;&gt;Project is on hold&lt;/h3&gt;</content><author><name></name></author><category term="scala" /><category term="zio" /><category term="HFT" /><summary type="html">I recently started a contract to build a high-frequency trading bot. I’ll use this to document the experience, engineering workflow, daily work, exciting breakthroughs, difficult problems, etc.</summary></entry><entry><title type="html">Reimplementing ‘git clone’ with Scala / ZIO</title><link href="http://localhost:4000/reimplementing-git-clone-with-scala-zio" rel="alternate" type="text/html" title="Reimplementing ‘git clone’ with Scala / ZIO" /><published>2021-08-29T00:43:15-07:00</published><updated>2021-08-29T00:43:15-07:00</updated><id>http://localhost:4000/reimplementing-git-clone-with-scala-zio</id><content type="html" xml:base="http://localhost:4000/reimplementing-git-clone-with-scala-zio">&lt;p&gt;I’m reimplementing git clone in Scala based of &lt;a href=&quot;https://stefan.saasen.me/articles/git-clone-in-haskell-from-the-bottom-up&quot;&gt;this reimplementation in Haskell&lt;/a&gt;. My goals in order are:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Get more comfortable in Scala and ZIO, particularly in functional-styled Scala&lt;/li&gt;
  &lt;li&gt;Practice more formal / rigorous SWE ‘best practices’&lt;/li&gt;
  &lt;li&gt;Develop a better understanding of the internals of git&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;SWE practices I’ll follow:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Write unit tests before writing code (kinda TDD, but really the development is driven by the original blog post)&lt;/li&gt;
  &lt;li&gt;Only function-level comments (no in-function comments)&lt;/li&gt;
  &lt;li&gt;Self-commenting code (will likely follow naming convensions from the Haskell implementation)&lt;/li&gt;
  &lt;li&gt;Git commit often (no set rule, but after every function, major milestone, bug fix)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’ll break the project up into phases. Phase 1 is to complete the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Parse the clone url to extract the host, port and repository path information.&lt;/li&gt;
  &lt;li&gt;Connect to the git server via TCP using the native git transport protocol.&lt;/li&gt;
  &lt;li&gt;Negotiate the objects that need to be transferrered from the server to the client. This includes receiving the current state of the remote repository (in the form of a ref advertisement) that includes the refs the server has and for each ref the commit hash it points to.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;phase-1&quot;&gt;Phase 1&lt;/h2&gt;

&lt;h4 id=&quot;step-1-read-post-and-understand-at-a-high-level&quot;&gt;Step 1: Read post and understand at a high level&lt;/h4&gt;
&lt;p&gt;Half way through, the post became overwhelming. I decided to skim for a high level overview for the rest, and focus on a deep understanding of &lt;a href=&quot;https://stefan.saasen.me/articles/git-clone-in-haskell-from-the-bottom-up/#git-transport-and-pack-wire-protocol&quot;&gt;git transport and pack wire protocal&lt;/a&gt; so that I can start implementing that part of it.&lt;/p&gt;

&lt;h4 id=&quot;step-2-understand-first-requirement-and-build-one-test-for-it---ref-discovery&quot;&gt;Step 2: Understand first requirement, and build one test for it - Ref discovery&lt;/h4&gt;
&lt;p&gt;This will complete step 1 - 3 of the git clone process detailed in the original blog post&lt;/p&gt;

&lt;h4 id=&quot;step-3-write-code-to-pass-test&quot;&gt;Step 3: Write code to pass test&lt;/h4&gt;
&lt;p&gt;Done. I should probably write more tests for better coverage, but my goal is to get a working program quickly, not one that will be put in production / care about resiliency.&lt;/p&gt;

&lt;h4 id=&quot;step-4-write-ls-remote-function-this-uses-io-ill-start-using-zio-test-instead-of-scalatest&quot;&gt;Step 4: Write ls-remote function. This uses IO. I’ll start using zio-test instead of scalatest.&lt;/h4&gt;
&lt;p&gt;I moved all tests to use the zio-test framework. I’ll still figure out what the test for this should look like.&lt;/p&gt;

&lt;h4 id=&quot;step-5-ls-remote-sends-a-message-over-tcp-ill-have-to-learn-a-bit-about-how-tcp-works-the-actor-model-etc&quot;&gt;Step 5: ls-remote sends a message over TCP. I’ll have to learn a bit about how TCP works, the actor model, etc.&lt;/h4&gt;
&lt;p&gt;I’m reading about TCP / Akka actors on &lt;a href=&quot;https://stackoverflow.com/questions/33747858/akka-tcp-client-how-can-i-send-a-message-over-tcp-using-akka-actor&quot;&gt;stackoverflow&lt;/a&gt; and from the &lt;a href=&quot;https://doc.akka.io/docs/akka/snapshot/io-tcp.html?language=scala&quot;&gt;official docs&lt;/a&gt; to understand how I can send a TCP message in Scala. I think the ZIO environments I’ll need are System and maybe Blocking. I haven’t worked with either of these ZIO environments, so that’ll be fun to learn about!&lt;/p&gt;

&lt;h4 id=&quot;step-6-write-test-for-ls-remote&quot;&gt;Step 6: Write test for ls-remote&lt;/h4&gt;

&lt;h4 id=&quot;step-7-breaking-down-ls-remote&quot;&gt;Step 7: Breaking down ls-remote&lt;/h4&gt;
&lt;p&gt;I’m skipping the ls-remote test for now. I’m not quite sure yet how to write tests that depend on external services (like a local tcp / git server), let alone an network-dependent service. I was able to get a prototyped local version of ref discovery working with akka. AKA I can see the correct git info when I put up a local git server, and run my tcp client code. It’s not type-safe / functional / ZIO’d yet. It looks like there’s some ZIO socket info &lt;a href=&quot;https://zio.github.io/zio-nio/docs/essentials/essentials_sockets&quot;&gt;out there&lt;/a&gt;. I’m not sure if I’ll be able to use this, or be able to wrap my akka setup in ZIO. It seems like this is the bulk of ls-remote though.&lt;/p&gt;

&lt;h4 id=&quot;step-8-getting-my-actor-to-receive-info-needed-for-lsremote&quot;&gt;Step 8: Getting my actor to receive info (needed for lsRemote)&lt;/h4&gt;
&lt;p&gt;Before, I only had the actor ‘fire-and-forget’, so I wouldn’t get a response back. Now, lsRemote returns a Future, which is the return type of an ask. I’m still not super clear on the setup here. I’m not even sure how many actors I have, tbh, but something is working. I’ll have to dig deeper to really understand what’s going on here, and I’ll probably be able to prune the process from what it is now.&lt;/p&gt;

&lt;h3 id=&quot;this-is-on-hold-because-i-took-a-contract-job-building-a-high-frequency-securities-trading-bot-in-scala-here-are-some-notes-on-it&quot;&gt;This is on hold because I took a contract job building a high-frequency securities trading bot in Scala. Here are some &lt;a href=&quot;https://aryzach.github.io/money&quot;&gt;notes on it&lt;/a&gt;.&lt;/h3&gt;

&lt;h4 id=&quot;step-8-trying-out-zio-socket-channel-in-place-of-the-akka-actors&quot;&gt;Step 8: Trying out ZIO socket channel in place of the Akka actors&lt;/h4&gt;
&lt;p&gt;The HFT bot mentioned above is on hold, so I’m continuing with this project!&lt;/p&gt;

&lt;p&gt;The akka actors I was using to handle the TCP messages to and from the git server weren’t quite working how I needed them to. I was following &lt;a href=&quot;https://hmn.stackfinder.net/questions/45992575/how-to-reuse-akka-tcp-connection-to-write-messages&quot;&gt;this example&lt;/a&gt;. I was sending an ‘ask’ to the TCP client actor from outside the client system. This is supposed to create a Future. The TCP client actor was receiving a response and the ‘info’ messages containted the correct response from the git server, but then that wasn’t being passed to the Future outside of the actor system. When I tried to send a message to the ‘sender()’ (what I thought would be the outside-the-actor-system caller), I was getting a ‘deadLetters’ actor issue. So I moved on for now.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://doc.akka.io/docs/akka/current/io-tcp.html&quot;&gt;This official TCP client example&lt;/a&gt;, needs a ‘replies’ / ‘listener’ of type ActorRef passed to it. My hangup was that I didn’t know what to pass here, and how to use it. There’s not many great docs / examples / blog posts on Akka actors, and if I go the actor route and figure this out, I might make some content.&lt;/p&gt;

&lt;p&gt;When you send an ‘ask’ to an actor, you get back a Future. Because I’d like to use ZIO, the plan was to wrap the Future in a ‘ZIO.fromFuture’. Well, I was having trouble with the actor model, and I found this &lt;a href=&quot;https://zio.github.io/zio-nio/docs/essentials/essentials_sockets&quot;&gt;ZIO socket channel&lt;/a&gt;. I’m not sure if this will do what I want it to, namely connecting to the server, writing the request in packet line format to the socket, then reading the response from the socket. The source code has methods called ‘write’ and ‘read’, so I’m hoping I’m on the right track. So far, I’ve gotten it to compile, but the ‘write’ method I’m calling on &lt;a href=&quot;https://github.com/zio/zio-nio/blob/master/nio/src/main/scala/zio/nio/channels/AsynchronousChannel.scala&quot;&gt;AsynchronousSocketChannel&lt;/a&gt; doesn’t match the method call in the source code. Very suspicious!&lt;/p&gt;

&lt;p&gt;I also made my first pull request to ZIO! It’s just a minor documentation fix! &lt;a href=&quot;https://github.com/zio/zio-nio/pull/410&quot;&gt;Here it is&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;step-9-tcp-reflections&quot;&gt;Step 9: TCP reflections&lt;/h4&gt;
&lt;p&gt;When testing the akka TCP actor example, it seemed like overkill. I also didn’t spend the time to get it to work fully. I pivoted away from Akka for two reasons:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;It seemed like overkill. I’m sending one message and receiving one in response. My understanding of the main purpose of actors is to deal with concurrency (high volume and speed, and when there is possible coupling between parts of the system). They can be used for other purposes, but justs seemed like a lot of code for something I could do just as well with less abstraction&lt;/li&gt;
  &lt;li&gt;I read how ZIO and Akka solve similar problems in different ways. Because one goal is to gain familiarity with writing ZIO code and the ecosystem I decided to pursue that route. 
I pivoted away from ZIO for two other reasons:&lt;/li&gt;
  &lt;li&gt;I don’t really understand the use case, or what problem it’s solving&lt;/li&gt;
  &lt;li&gt;To get the example running, I had to alter it and it differed from both the documented example and the source code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Akka actor model seems like the canonical way in Scala to send and recieve TCP messages, but also complicated and overkill. While I want to gain more familiarity with the actor abstraction, how to use it, and understand what problems it solves, I want to move quicker through building this app. For now, I’m just going to use &lt;a href=&quot;https://www.py4u.net/discuss/21492&quot;&gt;Java sockets from this example&lt;/a&gt; to build from.&lt;/p&gt;</content><author><name></name></author><category term="ZIO" /><summary type="html">I’m reimplementing git clone in Scala based of this reimplementation in Haskell. My goals in order are:</summary></entry><entry><title type="html">Tetris with Cats -&amp;gt; Snake with ZIO</title><link href="http://localhost:4000/ZIO-snake" rel="alternate" type="text/html" title="Tetris with Cats -&amp;gt; Snake with ZIO" /><published>2021-07-22T07:53:29-07:00</published><updated>2021-07-22T07:53:29-07:00</updated><id>http://localhost:4000/tetris-with-cats-to-snake-with-ZIO</id><content type="html" xml:base="http://localhost:4000/ZIO-snake">&lt;p&gt;&lt;img src=&quot;images/snake.gif&quot; alt=&quot;snake example gif&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/aryzach/snake-console-game-scala-ZIO&quot;&gt;git repo&lt;/a&gt;)
(&lt;a href=&quot;https://github.com/lpld/simple-games&quot;&gt;original project that this is modified from&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;I wanted to learn to work with ZIO because the job I’m hoping to start uses it heavily. Their code base also has some Cats Effect code. My goal here was to port this Cats-based FP Tetris console game to a ZIO-based console game. This is a daily log of the progress, hurdles, and thoughts.&lt;/p&gt;

&lt;h3 id=&quot;entry-1&quot;&gt;Entry 1&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;change scala version in build.sbt&lt;/li&gt;
  &lt;li&gt;still wasn’t running, debugged RectRegion, so now only one type of block shows&lt;/li&gt;
  &lt;li&gt;few other small bugs to get it running&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;entry-2&quot;&gt;Entry 2&lt;/h3&gt;
&lt;p&gt;I’ll start by just trying to get all piece shapes back in the game. When debugging, I cound this fragment:&lt;/p&gt;

&lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;allPossiblePieces&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Seq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;RectRegion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; 
	&lt;span class=&quot;c1&quot;&gt;// is this a monoid?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;multF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; 
  	&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;times&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;foldLeft&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;identity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;andThen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The comment “is this a monoid?” tells me I’m in a good place, because it shows me the original writer understands these concepts just a little better than I do, so hopefully this excersise will push me to their level.&lt;/p&gt;

&lt;p&gt;(I later scrapped the tetris idea and decided to tear it down further and make the snake game)&lt;/p&gt;

&lt;h3 id=&quot;entry-3&quot;&gt;Entry 3&lt;/h3&gt;

&lt;p&gt;Porting a lot of the project was much more straight forward than I thought it’d be. I spent time reading ZIO and Cats docs, and testing out some Cats types / methods to understand how they work. The ZIO discord was invaluable to help with my newbie questions.&lt;/p&gt;

&lt;p&gt;In the following, the State[Ansi, Unit] type and traverse method are from Cats libraries. I wanted to convert it to ZIO.&lt;/p&gt;

&lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;printAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Ansi&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;printLinesAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Ansi&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; 
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;zipWithIndex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;traverse&lt;/span&gt; 
			&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;printAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Which resulted in this (complements to @adamfraser on discord):&lt;/p&gt;

&lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;DrawCommand&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Ansi&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;printLinesAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Ansi&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;zipWithIndex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;forEach&lt;/span&gt; 
			&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;printAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This uses State from zio.prelude.&lt;/p&gt;

&lt;p&gt;This code is nearly identical to the original, but I had trouble understanding how the State return type was built up here, and how the result of the ‘lines.zipWithIndex.forEach…..’ computed value was was not thrown away with the underscore and just yielding unit. &lt;a href=&quot;https://www.slideshare.net/pjschwarz/state-monad-212839068&quot;&gt;This slideshow&lt;/a&gt; was super valuable, and the confusion can be simplified by painstakingly desugarring the for comprehension and State flatMap / map definitions. Ultimitaly, map and flatMap are defined in a less immediately intuitive way for State compared to the more familiar List, Option, and Either monads.&lt;/p&gt;

&lt;h3 id=&quot;entry-4&quot;&gt;Entry 4&lt;/h3&gt;

&lt;p&gt;After the snake eats food, you need a new food position, ideally a random position. With the software structure from the tetris game, namely the function to compute the next state from the current one, I was having difficulty using ZIO[Random, …, …] like I had in previous ZIO exersize projects. Because I had the infrastructure of streams already baked into the ‘next state’ functionality, I decided that instead of just a timed tick, I’d stream a new random position each tick, and only use the position if the snake ate food.&lt;/p&gt;

&lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Random food&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;foodStream&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ZStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Random&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Nothing&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Food&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; 
	&lt;span class=&quot;nv&quot;&gt;ZStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;repeatEffect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;nextIntBounded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;nextIntBounded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Food&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 

&lt;span class=&quot;c1&quot;&gt;// Regular ticks&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tick&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ZStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Clock&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Nothing&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; 
	&lt;span class=&quot;nv&quot;&gt;ZStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;tick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;125.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;millis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Timed Food&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tickedFood&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ZStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Clock&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Random&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Nothing&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Food&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; 
	&lt;span class=&quot;nv&quot;&gt;tick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;foodStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;_2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// User's interactions&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;userMoves&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ZStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Console&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;IOException&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;UserAction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; 
	&lt;span class=&quot;nv&quot;&gt;interactions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserAction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// merge them&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;allEvents&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ZStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Console&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Clock&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Random&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;IOException&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; 
	&lt;span class=&quot;n&quot;&gt;tickedFood&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;merge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userMoves&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;states&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ZStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Console&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Clock&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Random&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;IOException&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;GameState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; 
	&lt;span class=&quot;nv&quot;&gt;allEvents&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initialState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nextState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;states&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;takeWhile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I’m not sure if this is more or less efficient than doing an IO random call only when needed (when the snake ate food). I don’t know enough about how streams work. If any stream that can be precomputed precomputes with a lot of values, it might be more efficient than doing ‘random IO’ only when needed. Regardless, it probably doesn’t matter at all for this app, and it’s prematurely optimizing. But it’s fun to think about!&lt;/p&gt;

&lt;p&gt;Now the game is largely feature complete. It’s not a full snake game, because it never ends and you never lose, but it’s all ported to ZIO, which was my main learning goal.&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Journey to ZIO</title><link href="http://localhost:4000/journey-to-zio" rel="alternate" type="text/html" title="Journey to ZIO" /><published>2021-07-08T08:35:05-07:00</published><updated>2021-07-08T08:35:05-07:00</updated><id>http://localhost:4000/journey-to-zio</id><content type="html" xml:base="http://localhost:4000/journey-to-zio">&lt;p&gt;I have a job lined up working in Scala and will make heavy use of ZIO. This is a brief and working post about how I’m learning Scala and ZIO. Maybe it can be useful for somebody else wanting to learn.&lt;/p&gt;

&lt;h4 id=&quot;prior-experience--understanding&quot;&gt;Prior experience / understanding:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;I’m comfortable with the basics of FP from Haskell including a theoretical understanding of monads, functors, applicative. I can work with the IO monad, bind operator, ‘do’ syntax. I also understand that list and maybe are also monads. I’d never heavily applied these concepts outside of making small CLI apps, and I was basically writing lisp style code in Haskell.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;so-far&quot;&gt;So far:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Read and did exercises from &lt;a href=&quot;https://books.underscore.io/essential-scala/essential-scala.html#getting-started&quot;&gt;Essential Scala by Noel Welsh and Dave Gurnell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Built a sloppy, unfinished hangman to get used to language. &lt;a href=&quot;https://github.com/aryzach/scalaPracticeProjects/blob/main/Hangman.scala&quot;&gt;Link to file&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Followed &lt;a href=&quot;https://scalac.io/blog/introduction-to-programming-with-zio-functional-effects/&quot;&gt;this tutorial&lt;/a&gt;. The first time through without deep understanding just to understand the structure and thought process. I then rebuilt it mostly to build muscle memory, get a deeper understanding of the program structure and types&lt;/li&gt;
  &lt;li&gt;Built the game from &lt;a href=&quot;https://www.youtube.com/watch?app=desktop&amp;amp;v=sxudIMiOo68&quot;&gt;FP to the Max&lt;/a&gt; with ZIO before watching how John De Goes does it. Then I followed along as he built App1, which I understood fairly comfortably. In App2 he builds monads from scratch, which, before he said it, I thought I’d seen it before (just defining map and flatMap / bind on a data structure), and I recognized that the TestIO was similar to the state monad. When he started breaking down IO into Console and Random, that looked like the ZIO environment types. While I was already beyond my comfort level at this point, I really like the idea of getting to this level of understanding of working in FP and types. While I only understand App2 and App3 at a high level, it makes me excited to work towards this level of understanding, and I think I’ll get there much faster if I’m building real world applications with the FP mindset.&lt;/li&gt;
  &lt;li&gt;I’m getting side tracked and started watching and following along with the series &lt;a href=&quot;https://www.youtube.com/watch?v=XwMKw03w8bs&amp;amp;list=PLJGDHERh23x-ammk-n2XuZWhoRVB-wAF&quot;&gt;ZIO from DevInsideYou&lt;/a&gt; which I’m finding insightful and demystifying, but lost at the covarience / contravarience discussion.&lt;/li&gt;
  &lt;li&gt;Started building a Tic Tac Toe game with ZIO, but stopped when I felt I wasn’t learning much more.&lt;/li&gt;
  &lt;li&gt;Follow &lt;a href=&quot;https://www.signifytechnology.com/blog/2021/01/fp-to-the-min-by-john-de-goes-scala-in-the-city-conference&quot;&gt;FP to the Min&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Finished Tic Tac Toe and extended it to have an optional bot. I ran into an issue when trying to generalize a function which I think has to do with polymorphic methods. For now, I’m moving on, but I’d still like to clean this up, and make a smarter bot. Here’s the &lt;a href=&quot;https://github.com/aryzach/scala-ZIO-ticTacToe&quot;&gt;repo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I found a &lt;a href=&quot;https://github.com/lpld/simple-games&quot;&gt;tetris game written with Cats&lt;/a&gt;. I wanted to build a game so I could focus on ZIO instead learning other tech / libraries. I had a hard time finding ZIO games that use streams, so I’m especially excited about this because it’ll help me learn about working with streams in general, with the bonus of learning some Cats. Maybe I’ll try to port the app to use ZIO instead of Cats. I’ve also never had to deal with drawing to the console. The rendering approach in this repo seems like it’s less mature than something like curses in Python, so I’m hoping to learn something about that, too. Hacking this project will also hopefully help me understand larger pure FP scala code bases and learn about structuring larger pure FP scala projects in general! This is a bigger project, so I’ll track it &lt;a href=&quot;https://aryzach.github.io/ZIO-snake&quot;&gt;in this blog post&lt;/a&gt;. And here’s my &lt;a href=&quot;https://github.com/aryzach/snake-console-game-scala-ZIO&quot;&gt;repo&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;I found a post about &lt;a href=&quot;https://stefan.saasen.me/articles/git-clone-in-haskell-from-the-bottom-up/&quot;&gt;cloning ‘git clone’ in Haskell&lt;/a&gt;. This is a #realworld FP app, and I’m super excited to implement it with Scala/ZIO. My primary learning goal is to get more practice with ZIO. My secondary goals are to practice much better SWE practices (agile, comments, good git practices) and to gain a better understanding of how git works. TDD, Kanban, git practices, Extreme Programming, Scrum.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;todo&quot;&gt;Todo:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Create small real world ZIO app, ideally something that needs concurrency / async&lt;/li&gt;
  &lt;li&gt;Create online multiplayer CLI game (or browser game? scalaJS?) using Play framework and ZIO&lt;/li&gt;
  &lt;li&gt;Think about this: https://rcoh.svbtle.com/no-magic-regular-expressions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Commonly used resources / people to follow:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;ZIO benevolent dictator for life? &lt;a href=&quot;https://degoes.net/&quot;&gt;John De Goes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ZIO discord&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://scalac.io/zio/&quot;&gt;Scalac / ZIO&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;General scala: &lt;a href=&quot;https://alvinalexander.com/&quot;&gt;Alvin Alexander&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ZIO seems more like an ecosystem than a tooling library, similar to React (middle ground between a framework and a library). I could be totally off base here!&lt;/p&gt;</content><author><name></name></author><summary type="html">I have a job lined up working in Scala and will make heavy use of ZIO. This is a brief and working post about how I’m learning Scala and ZIO. Maybe it can be useful for somebody else wanting to learn.</summary></entry><entry><title type="html">Smart Irrigation</title><link href="http://localhost:4000/smart-irrigation" rel="alternate" type="text/html" title="Smart Irrigation" /><published>2021-04-16T11:47:25-07:00</published><updated>2021-04-16T11:47:25-07:00</updated><id>http://localhost:4000/smart-irrigation</id><content type="html" xml:base="http://localhost:4000/smart-irrigation">&lt;p&gt;&lt;img src=&quot;images/valveModuleEnclosure.jpg&quot; alt=&quot;Valve module without valve&quot; style=&quot;transform:rotate(90deg); margin-bottom: -50px; margin-top: -50px;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;problem&quot;&gt;Problem&lt;/h3&gt;
&lt;p&gt;The problem that we are facing is regularly irrigating roughly 40 - 100 acres with as little water, labor, and power possible. Currently, we have about 20 overhead sprinkler valves and 50 drip irrigation valves. It’s a roughly 5 - 15 minute round trip to change each sprinkler valve, which both takes time and interrupt other projects you may be working on. This translates to roughly four labor hours to irrigate 40 acres, and will take even more time when the rest of the property needs to be irrigated. The 50 drip irrigation valves are less of an issue right now because the valves are in a more central location.&lt;/p&gt;

&lt;p&gt;Secondary to the issue of manual labor is minimizing energy costs and water usage. In 2020, the energy cost was roughly $12,000 to irrigate 40 acres. We’re also limited by our water supply, a common problem for farmers in California. When we are near the end of the irrigation season (September - November), the creek produces much less water and at times, the pumps dry up the creek. Currently we only irrigate 40 acres, which is about 40% of what we plan to irrigate. As we irrigate more land, it’ll be important to use water resources more efficiently and save on energy costs when possible.&lt;/p&gt;

&lt;h3 id=&quot;proposed-solution&quot;&gt;Proposed Solution&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;First stage: Implement remote on / off functionality for each valve&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Second stage: Build a scheduler, schedule optimizer, and schedule deployer&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Third stage: Add valve and field sensors to collect and visualize water pressure, water flow, and dampness data&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Fourth stage: Incorporate sensor data to further reduce water and energy consumption&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;project-specification&quot;&gt;Project Specification&lt;/h3&gt;
&lt;p&gt;Succinctly, the infrastructure is a mix of overhead sprinklers and drip irrigation. The sprinklers each have their own 2” valve, and are about 80 meters from each other. We currently have 16 sprinklers. We also have about 30 rows with drip irrigation, each with their own valve. Because the water is delivered to the field through a pump, there is a small acceptable water pressure range. As a rule of thumb, one sprinkler valve and 5-15 drip irrigation valves must be open when the pump is on, otherwise, the pipes will burst under high pressure, and the sprinklers won’t turn with low pressure. Other infrastructure that we’ll have access to is 120 VAC power at the edge of the field, and WiFi coverage throughout.&lt;/p&gt;

&lt;p&gt;This problem naturally calls for a system to remotely command the valve state and receive sensor data. It’s clear we need electrically controlled valves, small and cheap computers in the field (microcontroller or Raspberry Pi), a way to both communicate with and power the devices in the field, and a user interface to command and interpret the sensor data. On the software side, the end goal is to use water, pressure, and flow data to intelligently irrigate the field. The pump should run for the least time possible, correlating to energy and water savings.&lt;/p&gt;

&lt;h3 id=&quot;valves&quot;&gt;Valves&lt;/h3&gt;
&lt;p&gt;Ball valves only require power when switching state, while solenoid valves require continuous power in the ‘on’ state. But ball valves, depending on type, require either polarity reversal, or a feedback sensor to read position. Solenoid valves can be toggled with a SPSP relay. Ball valves introduce more hardware complexity, so when thinking about scaling this to 100 - 1000 valves in the field, it’s something I wanted to avoid.&lt;/p&gt;

&lt;p&gt;At first I tested an aftermarket 120 VAC solenoid on a valve that came with a 24 VAC solenoid. It worked but was loud, got hot, and drew more power. I eventually found a 24 VDC solenoid that could be actuated by 5 VDC. This was better in every way, but if I used 120 VAC to power the valves would mean I’d have to add another piece of hardware to covert from 120 VAC to 5 VDC.&lt;/p&gt;

&lt;h3 id=&quot;power&quot;&gt;Power&lt;/h3&gt;
&lt;p&gt;I still debate the best way to solve the power issue. The main sources of power considered are cabled 120 VAC and a minimal solar / lithium battery system. 120 VAC is reliable, cheap, and requires little design, but then you have cables running all throughout the field on top of the 2” PVC where they’ll have to move periodically and will probably break from loose connections or get damaged by farm equipment. As the farm gets built out further from the 120 VAC power source, this won’t be a realistic option. The solar setup is more complex and could possibly fail if the solar panel and/or batteries aren’t sized big enough, and introduces other possible hardware failures.&lt;/p&gt;

&lt;p&gt;Before finding the Sonoff product line (below), I was discouraged from the naive assumption that I’d have to power the microcontrollers or Raspberry Pis by setting up a lot of outlets in the field, which would’ve been a messy and bloated solution. Luckily, I found the Sonoff Basic microcontroller board which takes 120 VAC directly from the cable.&lt;/p&gt;

&lt;p&gt;I found another product, the &lt;a href=&quot;https://www.itead.cc/wiki/Sonoff_SV&quot;&gt;Sonoff SV&lt;/a&gt;, that has a build in relay and takes 5 - 24 VDC. After reluctantly deciding to use the Sonoff Basic where we had access to 120 VAC, I wanted to understand power requirements to power the Sonoff SV board 24/7 and power the solenoid for 1 hour / day. Powering the microcontroller at 5 VDC draws about 70 mA and 150 mA when the relay is triggered. The 24 VDC solenoid powered by 5V draws about 100 mA. So 70 mA for 23 hours / day, and 250 mA for one hour / day. We’d like to run sprinklers at night (to minimize evaporation loss), so conservatively, we’d need&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(11 hrs * 70 mA) + (1 hr * 250 mA) = 1.02 Ah&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Conservatively, we’d need 3 &lt;a href=&quot;https://www.adafruit.com/product/1578&quot;&gt;3.7 VDC 500mAh lithium batteries&lt;/a&gt;. I still haven’t tested if the 3.7 - 4.2 VDC range is enough to power the Sonoff SV and solenoid, but if not, I may be able to put them in series, but that may complicate the solar panel / minimal solar controller setup. The Sonoff SV is run on an ESP8266, which I know has a low power mode, but I’m still in exploratory phase and haven’t gone down that route, yet. A potential downside to low power mode is that I may loose communications with it because I think it’ll turn off the WiFi.&lt;/p&gt;

&lt;p&gt;I’m also exploring using super capacitors instead of batteries. This has the benefit of possibly reducing complexity and cost, and they’ll last forever. The downside is that I haven’t seen any projects that do this, so there are a lot of unknown unknowns. I’ve order these &lt;a href=&quot;https://www.alibaba.com/product-detail/10000f-Super-Capacitor-2-7v-Capacitor_1600092154455.html?spm=a2700.7724857.normal_offer.d_title.49c651ce1VJr7n&amp;amp;s=p&quot;&gt;10,000 F 2.7v super capacitors&lt;/a&gt;. I’ll experiment putting them in combinations of series and parallel, and I should be able to get around 1-2 Ah in an acceptable voltage range, recharged directly by a 5 W solar panel.&lt;/p&gt;

&lt;h3 id=&quot;communication&quot;&gt;Communication&lt;/h3&gt;
&lt;p&gt;We don’t have cell service on the property, so we’re gradually building out WiFi service to the whole 130 acres. Both the Raspberry Pi and ESP8266 on the Sonoff series boards come with a WiFi antenna, so I readily decided to use it for communications. We also entertained the idea of using &lt;a href=&quot;https://en.wikipedia.org/wiki/LoRa&quot;&gt;LoRa&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Power-line_communication&quot;&gt;power-line communication&lt;/a&gt;. LoRa is a great solution for farms, but because we plan to have full-service WiFi, it didn’t make sense to manage two wireless communication systems. I’d never heard of power-line communications before, so while interesting, there may not be off-the-shelf solutions, and it relied on cabled power.&lt;/p&gt;

&lt;h3 id=&quot;iot-devices&quot;&gt;IoT devices&lt;/h3&gt;
&lt;p&gt;At first I tested using a Raspberry Pi with a relay board that held 16 relays. So I’d be able to control 16 solenoids or 4 - 8 ball valves, depending on relay type and ball valve motor wiring. If I went with 120 VAC and outlets, this would limit the number of outlets I needed, and it’s nice to be able to ssh into the pi to make changes or debug.&lt;/p&gt;

&lt;p&gt;This still seems like a non-optimal solution, and I gradually tested different microcontroller solutions until I found the Sonoff series. This uses an ESP8266 with a built-in WiFi antenna and SPST relay rated for 120 VAC for the Sonoff Basic and 5 - 24 VDC for the Sonoff SV. Other boards used poorly documented chips which made it difficult to flash custom firmware. The major downside is that it doesn’t have GPIO pins, but I’ve read that you can commandeer the TX and RX pins to use as GPIO. I’ll have to learn more about then when we implement sensors, but I wish I had time to test it before committing to this board.&lt;/p&gt;

&lt;p&gt;The firmware is fairly basic and most of it is just gluing parts of &lt;a href=&quot;https://tttapa.github.io/ESP8266/Chap01%20-%20ESP8266.html&quot;&gt;this guide&lt;/a&gt; together. It includes&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;WiFi setup&lt;/li&gt;
  &lt;li&gt;MQTT subscription&lt;/li&gt;
  &lt;li&gt;Parsing JSON data from the MQTT socket&lt;/li&gt;
  &lt;li&gt;Over-the-air (OTA) updates&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I implemented a different OTA procedure which uses HTTP GET requests to check if there’s a firmware update on the server. Then uses the ESPhttpUpdate library to update the firmware. To update, I update the FW_VERSION in the code with the latest version, upload the new compiled code to a specific file on the server, then update the file ‘postedVersion.version’ to contain the latest version number.&lt;/p&gt;

&lt;p&gt;Global:&lt;/p&gt;
&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;HTTPClient&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FW_VERSION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Main loop:&lt;/p&gt;
&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// get version&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;checking for version update&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;httpClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://192.168.1.7/postedVersion.version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;200&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newFWVersion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;version on server: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newFWVersion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newVersion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newFWVersion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newVersion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FW_VERSION&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Preparing to update&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// get binary&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;t_httpUpdate_return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ESPhttpUpdate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;192.168.1.7&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/postedVersion.bin&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HTTP_UPDATE_FAILED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

                &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HTTP_UPDATE_NO_UPDATES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;HTTP_UPDATE_NO_UPDATES&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My favorite feature of the firmware is that all devices can have the same code. They each have a lookup table that consists of all the name : value pairs with their MAC address and human readable name. This design choice is especially valuable because it allows for a simpler communication protocol, and allows all client devices to have the same code. The database stores IoT device info with a compressed human-readable name, and the IoT clients have a dictionary of all MAC addresses matched to human-readable name. When a command is received by a device, the device will look up it’s human-readable name, and then act accordingly. This simplifies the firmware updating process because the same code can be pushed to all devices.&lt;/p&gt;

&lt;p&gt;Global:&lt;/p&gt;
&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;C8:2B:96:4F:DC:A6&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;p00d00&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;D8:F1:5B:DA:E9:27&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;p00d01&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;D8:F1:5B:E8:3B:51&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;p00d02&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Setup:&lt;/p&gt;
&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// set MAC&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;MAC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WiFi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;macAddress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// set ID&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Main loop MQTT callback function:&lt;/p&gt;
&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 'doc' is the deserialized JSON message from the MQTT connection &lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;server&quot;&gt;Server&lt;/h3&gt;
&lt;p&gt;Here I host a web app built with Flask, run a Redis instance, an MQTT instance and server, and a ZMQ server (for a separate part of the project). For direct on/off functionality, the app takes user input as an HTTP POST, the Flask server handles the request and updates the Redis database. An MQTT server then grabs the Redis value and publishes it, which is then pushed to subscribing clients. This is admittedly an overly complicated stack. I already use Redis and ZMQ for other projects, but had a hard time with ZMQ on the microcontrollers, so I had to add MQTT to the stack.&lt;/p&gt;

&lt;p&gt;I’d already started managing a continuously operational server on a Raspberry Pi for a separate project because it had a few daily users. Most reliability issues were solved by running a cron job on boot that started a tmux session and started the necessary programs. Starting the programs in a tmux session allows me to work on the server without interfering with the necessary programs. Here is the bulk of the startup server script:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#bash&lt;/span&gt;
......
&lt;span class=&quot;nb&quot;&gt;sleep &lt;/span&gt;2 
ps aux | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;redis | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print $2}'&lt;/span&gt; | 
	&lt;span class=&quot;nb&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 1 | xargs &lt;span class=&quot;nb&quot;&gt;sudo kill&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-9&lt;/span&gt;
runuser &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; pi &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redis-server &amp;amp;'&lt;/span&gt; 
&lt;span class=&quot;nb&quot;&gt;sleep &lt;/span&gt;2

&lt;span class=&quot;c&quot;&gt;# point port 80 to port 5000 &lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;iptables &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; nat &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt; PREROUTING 
	&lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; tcp &lt;span class=&quot;nt&quot;&gt;--dport&lt;/span&gt; 80 &lt;span class=&quot;nt&quot;&gt;-j&lt;/span&gt; REDIRECT &lt;span class=&quot;nt&quot;&gt;--to-port&lt;/span&gt; 5000

python3 /home/pi/twistedApp/twistedApp.py &amp;amp; 
python3 /home/pi/zmqServer.py &amp;amp; 
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;python3 
	/home/pi/twistedApp/
		app/tools/network/pingLAN.py &amp;amp;
ps aux | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;mosquitto | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print $2}'&lt;/span&gt; | 
	&lt;span class=&quot;nb&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 1 | xargs &lt;span class=&quot;nb&quot;&gt;sudo kill&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-9&lt;/span&gt;
mosquitto &amp;amp;
&lt;span class=&quot;nb&quot;&gt;sleep &lt;/span&gt;2
python3 mqttServer.py &amp;amp;
python3 OTAserver.py &amp;amp; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This has been a journey of trial and error to get all the programs to restart and make re-connections with clients reliably. I kill the Redis and MQTT / mosquito daemons before restarting them. I also reroute port 80 traffic to port 5000, which allows me to run the web app ‘twistedApp’ from a non-root user, and still allow users to access the web page at the simple local domain ‘twisted.local’ instead of the unintuitive ‘192.168.1.7:5000’&lt;/p&gt;

&lt;h3 id=&quot;user-interface-and-app&quot;&gt;User Interface and App&lt;/h3&gt;
&lt;p&gt;Currently, the functionality available to users is direct on/off valve and pump control using forms on a web app.&lt;/p&gt;

&lt;p&gt;The IoT device at the pump is a Raspberry Pi with a high-voltage solid state relay and a float sensor. The pump runs, but will momentarily stop if the creek water level gets too low. If the creek water level rises, the pump will turn back on. This functionality is handled locally on the Pi at the creek.&lt;/p&gt;

&lt;p&gt;I’ve started to build out a scheduler which will create an optimized schedule that limits the total pump runtime while staying within the acceptable water pressure range. The user inputs how long they would like to run each drip irrigation row and each sprinkler.&lt;/p&gt;

&lt;p&gt;When the form is submitted, the values are passed to an optimizing function. Here it creates a list of all acceptable valve state permutations. For example if we had 2 drip valves and 2 sprinklers, and we required 1 sprinkler and 1 drip valve to be open to stay in the acceptable pressure range, the acceptable states would look as follows:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Valve Type&lt;/th&gt;
      &lt;th&gt;State 1&lt;/th&gt;
      &lt;th&gt;State 2&lt;/th&gt;
      &lt;th&gt;State 3&lt;/th&gt;
      &lt;th&gt;State 4&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Drip 1&lt;/td&gt;
      &lt;td&gt;On&lt;/td&gt;
      &lt;td&gt;On&lt;/td&gt;
      &lt;td&gt;Off&lt;/td&gt;
      &lt;td&gt;Off&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Drip 2&lt;/td&gt;
      &lt;td&gt;Off&lt;/td&gt;
      &lt;td&gt;Off&lt;/td&gt;
      &lt;td&gt;On&lt;/td&gt;
      &lt;td&gt;On&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Sprinkler 1&lt;/td&gt;
      &lt;td&gt;On&lt;/td&gt;
      &lt;td&gt;Off&lt;/td&gt;
      &lt;td&gt;On&lt;/td&gt;
      &lt;td&gt;Off&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Sprinkler 2&lt;/td&gt;
      &lt;td&gt;Off&lt;/td&gt;
      &lt;td&gt;On&lt;/td&gt;
      &lt;td&gt;Off&lt;/td&gt;
      &lt;td&gt;On&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The state will represent a time increment of 15 minutes. We’ll then create increasingly longer list of state combinations, and stop when we’ve reached a schedule that opens the valves for the correct amount of total time for each valve. This ensures all valves are open for the inputted time, while minimizing the time the pump is on. Because it’s beneficial to water the plants periodically throughout the day, the final schedule will be one that alternates valve state permutations.&lt;/p&gt;

&lt;p&gt;I’ll still have to build a deployer that allows you to select a schedule and deploy it at a specified time.&lt;/p&gt;

&lt;h3 id=&quot;reflections&quot;&gt;Reflections&lt;/h3&gt;
&lt;h4 id=&quot;ewelink-software&quot;&gt;eWeLink Software&lt;/h4&gt;
&lt;p&gt;As I’m finishing building this out and installing / testing in the field, I found that the Sonoff devices come with a cloud-based, off-the-shelf controller called &lt;a href=&quot;https://www.ewelink.cc/en/&quot;&gt;eWeLink&lt;/a&gt;, which covers most of our initial use cases (scheduling and on/off functionality). They also have event-triggered control, but it looks like they only support sensors within the Sonoff ecosystem, which, unless they expanded their product line or made the software open source, wouldn’t be able to fulfill our requirements.&lt;/p&gt;

&lt;p&gt;If I would’ve known about this off-the-shelf software solution earlier, I could’ve prioritized finishing the hardware design and installation, and therefore completing Stage 1 and 2 earlier.&lt;/p&gt;

&lt;hr /&gt;
&lt;h4 id=&quot;power-consumption-and-valve-type&quot;&gt;Power Consumption and Valve Type&lt;/h4&gt;
&lt;p&gt;When I found the Sonoff boards with built-in SPST relay, I was relieved from a lot of hardware mess. The downfall is that it limits me to solenoid valves. In the future, I may try 3-wire ball valves with a normal ESP8266 and SPDT to limit power consumption and possibly minimize solar / battery requirements.&lt;/p&gt;

&lt;hr /&gt;
&lt;h4 id=&quot;server-and-apps&quot;&gt;Server and Apps&lt;/h4&gt;
&lt;p&gt;If this ever moves from a home brew project to a consumer-grade product / service, I would build a more robust server that could handle multiple customers, and I’d likely host in in the cloud with native iOS and Android apps.&lt;/p&gt;

&lt;hr /&gt;
&lt;h4 id=&quot;overall&quot;&gt;Overall&lt;/h4&gt;
&lt;p&gt;The ideal hardware setup would be an SPDT relay on built-in Sonoff SV controlling a 3-wire ball valve, powered by a 5-10 watt solar panel and 3-4 lithium batteries or an appropriately-sized supercapacitor.
The ideal software architeture would be native phone apps and a web app, with a data dashboard to view sensor data.&lt;/p&gt;</content><author><name></name></author><category term="hard" /><category term="tech" /><category term="product" /><category term="design" /><summary type="html"></summary></entry><entry><title type="html">Solar Powered Ranger</title><link href="http://localhost:4000/solar-powered-ranger" rel="alternate" type="text/html" title="Solar Powered Ranger" /><published>2021-04-16T11:47:25-07:00</published><updated>2021-04-16T11:47:25-07:00</updated><id>http://localhost:4000/solar-powered-ranger</id><content type="html" xml:base="http://localhost:4000/solar-powered-ranger">&lt;p&gt;&lt;img src=&quot;images/ranger.jpg&quot; alt=&quot;ranger&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I wanted to passively charge a &lt;a href=&quot;https://ranger.polaris.com/en-us/ranger-ev/&quot;&gt;Polaris Ranger EV&lt;/a&gt; from solar panels. Two 100 watt solar panels had been installed on top of the ranger. The ranger originally had lead-acid batteries. Running and charging lead-acid from solar is simple with a solar controller, but the ranger had already been converted to run off of a lithium battery, which meant it had a battery management system (BMS). Powering the BMS was the crux of this problem.&lt;/p&gt;

&lt;p&gt;I decided I only wanted to power the BMS when the solar panels were producing power. I was able to achieve this using a combination of the following:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;isolated 9-60v to 24v DC &lt;a href=&quot;https://www.digikey.com/en/products/detail/cui-inc/PQAE50-D24-S24-D/13563301?utm_adgroup=DC%20DC%20Converters&amp;amp;utm_source=google&amp;amp;utm_medium=cpc&amp;amp;utm_campaign=Shopping_Product_Power%20Supplies%20-%20Board%20Mount_NEW&amp;amp;utm_term=&amp;amp;utm_content=DC%20DC%20Converters&amp;amp;gclid=Cj0KCQjw8vqGBhC_ARIsADMSd1Ao04uo4vTQqNOUY5ago-pk_4bIGioo2zeDo9YiX6XfKT8Wd89V3r0aAu0_EALw_wcB&quot;&gt;converter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;high voltage, solid state &lt;a href=&quot;https://www.amazon.com/dp/B07PFDJQLV/?coliid=IL264W22BQM4Z&amp;amp;colid=2M5Y12QIIIVYU&amp;amp;psc=1&amp;amp;ref_=lv_ov_lig_dp_it&quot;&gt;relay&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;diodes (to prevent back feeding grid power or back feeding the solar controller)&lt;/li&gt;
  &lt;li&gt;voltage distributor&lt;/li&gt;
  &lt;li&gt;3A fuse&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;images/solarOnRanger.jpg&quot; alt=&quot;solar panels on ranger&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So here we take solar power (two 100 watt panels in series, so 0 - 56 volts), convert it to 24v to power the BMS. Then the BMS is sampling the battery. When the BMS determines the battery should be charged, it toggles an output pin from float to ground. Then I also take 24v to signal to the relay. At this point, when the BMS is powered and pulls the output pin to ground, the relay closes. The relay will open and close the connection from the solar controller to the battery.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/rangerBoard.jpeg&quot; alt=&quot;ranger board&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This approach worked in simple scenarios such as when the sun was shining or when it wasn’t, but I ran into two coupled issues:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;partial light conditions near a solar panel power boundary (9 - 14v panel voltage)&lt;/li&gt;
  &lt;li&gt;partial light conditions (open-circuit panel voltage &amp;lt;40v) when hooked up to the battery and when the BMS indicates to charge. In this scenario, the relay closes, connecting the solar controller to the batteries. Then the batteries pull the panel voltage down (to under 9v), which in turn turns off the BMS. Once the BMS turns off and the batteries stop charging, the solar panel open-circuit voltage rises again, which triggers the BMS to turn on. And the cycle repeats with a period of about 1 second.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;images/boardInRanger.jpg&quot; alt=&quot;testing board&quot; /&gt;&lt;/p&gt;

&lt;p&gt;These issues indicated a need for hysteresis in the system. Because the hysteresis had to be low power, I couldn’t use a software solution which would’ve relied on a bare minimum of powering a microcontroller. I found a low powered active circuit solution that relied on a &lt;a href=&quot;https://en.wikipedia.org/wiki/Comparator#:~:text=In%20electronics%2C%20a%20comparator%20is,and%20one%20binary%20digital%20output%20.&quot;&gt;comparator&lt;/a&gt;. I used the &lt;a href=&quot;https://www.ti.com/product/LM339&quot;&gt;LM339&lt;/a&gt; and found this &lt;a href=&quot;https://www.daycounter.com/Calculators/Comparator-Hysteresis-Calculator.phtml&quot;&gt;calculator&lt;/a&gt; useful. I don’t have a good intuition for how a comparator should behave, so I leaned heavy on trial and error with the calculator to find appropriate voltage and resistor values.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/hysteresisDiagram.jpg&quot; alt=&quot;hysteresis diagram&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hysteresis diagram&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;images/circuitDiagramWithHysteresis.jpg&quot; alt=&quot;solar panels on ranger&quot; style=&quot;transform:rotate(270deg); margin-bottom: -60px; margin-top: -50px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Full circuit diagram with hysteresis circuit&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The goal of the comparator / hysteresis circuit is to differentiate ON vs OFF threshold values. In my case, I wanted the BMS to turn on when the solar panel voltage was above 40v and turn off when it was below 10v. This would eliminate the power cycling of the BMS when in partial sun and when the battery was connected to the solar controller / solar panels. I learned two technical lessons through experimentation with the comparator:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;a higher reference voltage or supply voltage will give you greater difference between your high (on) and low (off) threshold voltages&lt;/li&gt;
  &lt;li&gt;find resistor ratios that are easy to make with your given set of resistors
Because the comparator consumed such low power, I used the battery to supply 24v to the comparator through a separate DC converter.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The BMS DC converter has an optional enable pin. Adding the hysteresis circuit between the solar panels (comparator signal input) and DC converter (comparator signal output) allowed hysteresis control over the BMS. Now, the power cycle went as follows:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;BMS is off&lt;/li&gt;
  &lt;li&gt;at 40v or higher, the BMS turns on&lt;/li&gt;
  &lt;li&gt;if the BMS decides to charge the batteries, the relay is closed&lt;/li&gt;
  &lt;li&gt;the panel voltage is pulled down from the battery (panel is at 15 - 30v), but BMS stays on&lt;/li&gt;
  &lt;li&gt;when the panel is pulled down from the battery and reads under 10v, the BMS will be shut off and battery will stop charging
40v was set as the high threshold because when the panels read an open-cicuit voltage of &amp;lt;40v, the closed-circuit voltage is under 9v. Because the DC converter voltage minimum was 9v, this created the unwanted power cycle effect.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;images/rangerHysteresisBreadboard.jpeg&quot; alt=&quot;ranger hysteresis breadboard&quot; style=&quot;transform:rotate(270deg); margin-bottom: -50px; margin-top: -50px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now, this circuit worked as expected. The new issue was to harden the system to tolerate both vibration and mud, which is a lot less interesting to talk about.&lt;/p&gt;

&lt;p&gt;Originally, the ranger used a different &lt;a href=&quot;https://www.amazon.com/Genasun-GVB-8-Pb-48V-WP-Waterproof-Controller-Batteries/dp/B07H8SYB28/ref=pd_lpo_86_t_0/138-2639310-8966331?_encoding=UTF8&amp;amp;pd_rd_i=B07H8SYB28&amp;amp;pd_rd_r=f6de1b83-7f25-4575-9c5c-064d36f5a8df&amp;amp;pd_rd_w=jZxcf&amp;amp;pd_rd_wg=4Q7tc&amp;amp;pf_rd_p=fb1e266d-b690-4b4f-b71c-bd35e5395976&amp;amp;pf_rd_r=1N0XHAM1TXFKEFB1A66T&amp;amp;psc=1&amp;amp;refRID=1N0XHAM1TXFKEFB1A66T&quot;&gt;solar controller for the lead-acid batteries&lt;/a&gt;, but when that didn’t work (3 charging cycles were too reserved for the lithium), I used &lt;a href=&quot;https://www.amazon.com/dp/B08JZCRKDR/?coliid=I3TSBTV63CHLZD&amp;amp;colid=2M5Y12QIIIVYU&amp;amp;psc=1&amp;amp;ref_=lv_ov_lig_dp_it&quot;&gt;this&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Notes:
BMS DC converter needs to be isolated because the auxiliary ground is different from the battery ground&lt;/p&gt;

&lt;p&gt;What I learned:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;When working with signal voltages, use the highest resistance possible without diluting your signal. This avoids burning off power in the resister&lt;/li&gt;
  &lt;li&gt;Using solar as a switch and only powering the BMS when it was sunny turned out to be an unneeded constraint. The BMS consumes about 2 watts. A simpler solution would’ve been powering the BMS directly from the battery and taking the power hit of 2 watts. The issue with this would be the possibility of draining and damaging the battery if it got too low. The benefit would be that the batteries would charge in times where the hysteresis circuit would prevent charging but when there was still some sun, notably around an open-circuit panel voltage of 30 - 40v. This is the solution I ended up implementing, so as not to spend more time hardening the breadboard prototype circuit.&lt;/li&gt;
  &lt;li&gt;Instead of hysteresis, could’ve used a timer circuit. This could reduce BMS power cycling when driving through shade, but when it’s still sunny elsewhere&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The BMS is the &lt;a href=&quot;https://www.orionbms.com/manuals/pdf/wiring_jr.pdf&quot;&gt;Orion BMS Jr.&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html"></summary></entry><entry><title type="html">Class and Book Reviews</title><link href="http://localhost:4000/class-and-book-reviews" rel="alternate" type="text/html" title="Class and Book Reviews" /><published>2020-03-16T11:47:25-07:00</published><updated>2020-03-16T11:47:25-07:00</updated><id>http://localhost:4000/class-and-book-reviews</id><content type="html" xml:base="http://localhost:4000/class-and-book-reviews">&lt;p&gt;This is a chronological listing and description of all resources I’ve used to learn STEM related things. Most of them are computer science and math resources. The resources include college classes, online MOOC-like classes, and books. It’s noted if I audited the class. None of the online courses were for credit, so you could say I audited those, too. I do all the exercises and projects included in the class or book listed, expect for some exceptions where noted. Most of the online classes I take come from an online computer science curriculum that tries to mimic a university CS degree equivalent. The classes are all free and largely project-based. I’ve really enjoyed the curriculum so far and highly recommend most of it. Here’s the link: &lt;a href=&quot;https://github.com/ossu/computer-science&quot;&gt;OSSU (Open Source Society University&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;computer-science&quot;&gt;Computer Science&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;##cs-50&quot;&gt;CS 50&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#introduction-to-programming&quot;&gt;Introduction to programming&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#how-to-design-programs&quot;&gt;How to Design Programs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#networking&quot;&gt;Networking&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#machine-learning&quot;&gt;Machine Learning&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#learn-you-a-haskell&quot;&gt;Learn You a Haskell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#software-construction&quot;&gt;Software Construction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#programming-languages&quot;&gt;Programming Languages&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#prolog&quot;&gt;Prolog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#discrete-math-(cs-dept)&quot;&gt;Discrete Math (CS dept)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#git&quot;&gt;Git&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#intro-to-haskell&quot;&gt;Intro to Haskell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#nand2tetris&quot;&gt;Nand2Tetris (computer architecture)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#grad-level-programming-languages&quot;&gt;Grad-level Programming Languages&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ai&quot;&gt;AI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;math&quot;&gt;Math&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#linear-algebra&quot;&gt;Linear Algebra&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#calculus&quot;&gt;Calculus&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#odes&quot;&gt;ODEs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#Discrete Math (math dept)&quot;&gt;Discrete Math (math dept)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#number-theory&quot;&gt;Number Theory&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#intro-to-real-analysis&quot;&gt;Intro to Real Analysis&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#abstract-algebra&quot;&gt;Abstract Algebra&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;physical-science&quot;&gt;Physical Science&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#microbiology&quot;&gt;Microbiology&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#physics (mechanics)&quot;&gt;Physics (mechanics)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#general-chemistry-II&quot;&gt;General Chemistry II&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#Physics (electromag)&quot;&gt;Physics (electromag)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#neural-computation&quot;&gt;Neural Computation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cs-50&quot;&gt;CS 50&lt;/h3&gt;
&lt;h4 id=&quot;introduction-to-programming-online-edx---2017&quot;&gt;Introduction to programming (online, edX) - 2017&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.cs50.net/2017/fall/syllabus/cs50.html&quot;&gt;2017 syllabus&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.edx.org/course/cs50s-introduction-to-computer-science&quot;&gt;Current edX course&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first class that got me hooked (on STEM and CS). I was looking for an intro to programming class online to get my feet wet. At this point I decided not to pursue business/accounting jobs and not to get my CPA. I knew I was interested in STEM, and that programming would a useful skill no matter what STEM field I went into.&lt;/p&gt;

&lt;p&gt;The good: This class really opened my eyes to CS. I learned some data structures (arrays, linked lists, trees, hash tables), control structure (for, while, if-else, etc), pointers, recursion, function definitions, using functions, sorting and searching algorithms, memory, basic debugging, and all other things you’d expect out of an intro to programming class and more. Most of what I learned was through a lot of trial and error, this being both really beneficial and really frustrating. I think my first few projects had all of their functionality in the ‘main’ function, which in retrospect would still be very frustrating and difficult way to build something for anybody.&lt;/p&gt;

&lt;p&gt;Two projects I remember:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Pyramid( int x ) prints a pyramid of height x made of character _.&lt;/li&gt;
  &lt;li&gt;Cipher( string v, string s ) returns your string encrypted using a Vigenère cipher.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The projects were fun and super challenging at the time.&lt;/p&gt;

&lt;p&gt;The less good: The class was in C. In retrospect, this is kind of nuts, and they’ve since moved it to later in the curriculum. At the time, the class was perfect for me, because I was in the zone of determination and will. For somebody who’s not in that zone and just wants to learn ‘coding’, python would be a much better choice. While the idea of ‘strings are arrays with syntactic sugar’ and everything about pointers is useful and interesting, I can see how a lot of people would fall off the wagon here. I also found the edX discussions either lacking traffic, or just unhelpful. I resorted to reddit to ask a lot of questions, which wasn’t bad, and may have actually helped teach me out to ask better technical questions.
&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;
Originally, I was so motivated that I’d finish this 3-month, 8 project course in a few weeks. I ended up running into a lot of walls where I couldn’t debug something, and some of those projects ended up taking way longer, especially due to the back and forth on reddit, which can generally have 12-36 hour turnaround times depending on the question and momentum of the post. I did all the difficult-level problem sets instead of the easier ones, and I think it took me about 4 months. I skipped the python sections (recommended from online sources), and by the end was forcing myself to just spend an hour a day on it. But I still look fondly on my experience going through this class. It gave me a lot of confidence to move forward in the CS/programming world that was before so intimidating and foreign. I’d give myself an A in this class if you don’t grade on elegance of solutions.&lt;/p&gt;

&lt;h3 id=&quot;microbiology&quot;&gt;Microbiology&lt;/h3&gt;
&lt;h4 id=&quot;microbiology-michigan-state-university---2017&quot;&gt;Microbiology (Michigan State University) - 2017&lt;/h4&gt;
&lt;p&gt;I took this class my last semester in college when I first thought ‘maybe I like/can do STEM.’ Microbiology is all about cycles, and ‘functions’ (read From Bacteria to Bach and Back by Dennett for the controversial use the of the word ‘function’ in the natural sciences).&lt;/p&gt;

&lt;p&gt;While I retained little specific info, I enjoyed the process and readings, and gave me some context when thinking about more physical systems, and let me think about artificial processes more clearly (and other intelligent life may hardly separate the difference that we make between natural and artificial systems).&lt;/p&gt;

&lt;p&gt;I think I 3.5’d this class (so B+/A-).&lt;/p&gt;

&lt;h3 id=&quot;linear-algebra&quot;&gt;Linear Algebra&lt;/h3&gt;
&lt;h4 id=&quot;linear-algebra-city-colleges-of-chicago---2018&quot;&gt;Linear Algebra (City Colleges of Chicago) - 2018&lt;/h4&gt;
&lt;p&gt;This was my first math class since failing (then retaking and barely passing) Calc 2 roughly 4-5 years prior. I credit linear algebra and my professor for opening up my eyes to upper level math. While linear algebra is mostly computational, it has interesting ideas (the concept of spaces (4+ dimensional linear spaces), infinite spaces, transformations, determinant as volume, derivative as a linear transform, etc).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab&quot;&gt;The Essence of Linear Algebra&lt;/a&gt; by Grant Sanderson / 3blue1brown also got me exited and thinking about math&lt;/p&gt;

&lt;p&gt;I wouldn’t still be interested (yet struggling) with higher-level math now if it hadn’t been for my linear algebra professor. He was truly patient and helpful with all of my questions. He introduced me to functional analysis and Hilbert spaces (but which I understand little about), and laid out the world of math for me.&lt;/p&gt;

&lt;p&gt;I 4.0’d this class (A), but don’t remember a lot of the details, which is proving a little frustrating because my Abstract Algebra class now makes heavy use of properties of the some matrix groups for examples.&lt;/p&gt;

&lt;h3 id=&quot;physics-mechanics&quot;&gt;Physics (mechanics)&lt;/h3&gt;
&lt;h4 id=&quot;physics-mechanics-city-colleges-of-chicago---2018&quot;&gt;Physics (mechanics, City Colleges of Chicago) - 2018&lt;/h4&gt;
&lt;p&gt;I took this as part of my interest in STEM, and also because I wanted to know how more things worked, and I never took physics in high school. I was very interested and worked hard to understand the topics as deep as I could. While it got me closer to first principles understanding of the world, at some point it gets hand-wavy and you can’t go much deeper without tools like analysis, topology, and PDE’s.&lt;/p&gt;

&lt;p&gt;I 4.0’d the class (A).&lt;/p&gt;

&lt;h3 id=&quot;general-chemistry-ii&quot;&gt;General Chemistry II&lt;/h3&gt;
&lt;h4 id=&quot;general-chemistry-ii-city-colleges-of-chicago---2018&quot;&gt;General Chemistry II (City Colleges of Chicago) - 2018&lt;/h4&gt;
&lt;p&gt;I also took this out of general interest. I learned how batteries work (kinda), and that while I enjoyed the labs in class, I don’t want to work in a lab. Also pushed me away from engineering and more towards math / CS.&lt;/p&gt;

&lt;p&gt;I 4.0’d the class (A).&lt;/p&gt;

&lt;h3 id=&quot;calculus&quot;&gt;Calculus&lt;/h3&gt;
&lt;h4 id=&quot;calculus-sequences-michigan-state-university-city-colleges-of-chicago---2012-to-2018&quot;&gt;Calculus sequences (Michigan State University, City Colleges of Chicago) - 2012 to 2018&lt;/h4&gt;
&lt;p&gt;First semester freshman year of college, I scraped by Calc I, and then failed Calc II second semester, retook Calc II over the summer at community college and barely passed. Then about 5 years later, I relearned a lot on my own (starting from trig and high school algebra). I used&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Calculus_Made_Easy&quot;&gt;Calculus Made Easy&lt;/a&gt; to relearn Calc I, because I never felt like I understood it when I took it. This book come highly recommended, but I didn’t find exceptionally different or enlightening. I think I actually learned it this time through because I applied myself, which is a lot more than I can say I did taking it 5 years prior. Then I took Calc II and III at City Colleges of Chicago. This endeavor was personal, because I remember it being so hard and defeating before.&lt;/p&gt;

&lt;p&gt;Taking the time to actually practice the concepts and ask questions can do wonders. For anybody struggling with this, I definitely recommend community colleges because the professors and TAs are so much more personable and accessible (in my experience anyway).&lt;/p&gt;

&lt;p&gt;After all that, I don’t really understand all the fuss about the calculus sequence, and think it’s probably really poorly taught most everywhere (because of the required curriculum, not because of the teachers).&lt;/p&gt;

&lt;p&gt;I audited Calc II and officially took Calc III, which I got an A in.&lt;/p&gt;

&lt;h3 id=&quot;physics-electromag&quot;&gt;Physics (electromag)&lt;/h3&gt;
&lt;h4 id=&quot;physics-electromag-city-colleges-of-chicago---2018&quot;&gt;Physics (electromag, City Colleges of Chicago) - 2018&lt;/h4&gt;

&lt;p&gt;This class was a lot of fun and a lot harder to wrap my head around, and left lots of open questions. When you bend an electron beam with a magnet, why do the different poles move the bean in different directions? I don’t remember the details, but I do remember it seeming suspiciously asymmetric at the time. I also watched a lot of Feynman lectures at the time, which got me thinking a lot about the fun of physics and education.&lt;/p&gt;

&lt;p&gt;I 4.0’d the class (A).&lt;/p&gt;

&lt;h3 id=&quot;odes&quot;&gt;ODEs&lt;/h3&gt;
&lt;h4 id=&quot;ordinary-differential-equations-city-colleges-of-chicago---2018&quot;&gt;Ordinary Differential Equations (City Colleges of Chicago) - 2018&lt;/h4&gt;

&lt;p&gt;I took this with the same professor who taught Linear Algebra (who I really like). Unfortunately, this class was just bad. It seems everybody has the same experience the first ODE class, where it’s just pattern matching on a superficial and non-mathematical level. I truly felt like I wasn’t doing math most of the time.&lt;/p&gt;

&lt;p&gt;My professor told me the standard / required curriculum for ODE was made during Apollo Era (or maybe it was during the Manhattan Project), when they just needed a lot of competent, but not necessarily comprehending engineers to run all the numbers. This class is required for lots of engineering majors, but it needs to either be dropped or overhauled.&lt;/p&gt;

&lt;p&gt;I 4.0’d the class (A), but don’t feel like I have any real understanding of ODE’s past the basics and how to solve them. I wish there was a discovery period in the class where, given some information, we uncovered the underlying ODE’s that were waiting to be solved. Actually, now that I remember, we did this once with a pendulum, but it wasn’t very enlightening.&lt;/p&gt;

&lt;h3 id=&quot;introduction-to-programming-python&quot;&gt;Introduction to programming (python)&lt;/h3&gt;
&lt;h4 id=&quot;introduction-to-programming-online-edx---2019&quot;&gt;Introduction to programming (online, edX) - 2019&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://www.edx.org/course/introduction-to-computer-science-and-programming-7&quot;&gt;edX course&lt;/a&gt; 
	Intro to programming (w/ python, edX) (link edx): I was wanting to take more online programming classes, but it had been almost a years since I last took CS 50, so I wanted a refresher, and wanted to learn python because I knew it was considered a more widely used language and more appropriate intro language. 
	The class is great for an intro class, and fairly breezy after taking the class that was taught in C. I believe this class started to get into OO design. Not much to say here other than I’d recommend this before CS 50 to most people. 
I would’ve gotten an A in the class.&lt;/p&gt;

&lt;h3 id=&quot;how-to-design-programs&quot;&gt;How to Design Programs&lt;/h3&gt;
&lt;h4 id=&quot;how-to-design-programs-htdp-online-edx---2019&quot;&gt;How to Design Programs (HtDP, online, edX) - 2019&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://www.edx.org/course/how-to-code-simple-data&quot;&gt;edX course part 1 - How to Code: Simple Data&lt;/a&gt; 
&lt;a href=&quot;https://www.edx.org/course/how-to-code-complex-data&quot;&gt;edX course part 2 - How to Code: Complex Data&lt;/a&gt;
	At first I didn’t like this class because it seemed like a lot of just referencing design tables and tediously designing code that didn’t have much impact. But it turned out to be a really great class that taught about designing data, designing, functions, and designing programs. 
	I can’t say I had quite enough context at the time to fully appreciate the course, but it definitely left a mark, and I might have to revisit it in a few years after I have more design experience. It was taught in Racket (lisp dialect), and it was my first time writing functional code. It helped me write a lot more elegant solutions, utilize pattern matching and recursion a lot more elegantly and efficiently. I learned how to write data definitions, write tests and then write test-driven programs, understand the type of data / function / program I’m writing and match it to design patterns, write variations of recursive functions (tail recursive, cached, navigate graphs, etc), maintain state in a functional language, and much more. 
	The larger projects I remember were building a Sudoku solver using backtracking search, and building a space invaders game. Racket is a weird language because they give you strange language concepts like images as a primitive data type and the ‘big bang’ control structure, which was a little confusing to me at the time when trying to understand why images and other black box-like data types were primitives, and what that meant for a language. 
	When I was interning, I’d send myself screenshots of the problems / programs assigned, do them as best I could on a text editor at work, then email the files back to myself to run them at home. I would’ve gotten an A in the class.&lt;/p&gt;

&lt;h3 id=&quot;networking&quot;&gt;Networking&lt;/h3&gt;
&lt;h4 id=&quot;intro-to-computer-networking-online-coursera---2019&quot;&gt;Intro to Computer Networking (online, Coursera) - 2019&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLEAYkSg4uSQ2dr0XO_Nwa5OcdEcaaELSG&quot;&gt;Coursera course&lt;/a&gt;
	I can’t say I learned much from this course. It was a lot of lecture material, multiple choice chapter tests, and no programming exercises. They recommended getting familiar with WireShark (packet sniffer), but that guidance was pretty useless too. I suggested to the catalogue that compiles this CS curriculum to change the course and provide real programming assignments to go along with the course. They’ve since added 4 assignments (which I haven’t done yet), got rid of the chapter tests (which is a good thing in this case, because it was mostly all rote memorization), and suggest that the learner find a different networking course. 
	I took this class because I was interning in cybersecurity IT at NASA, and everybody around me knew networking really well, and I felt like an idiot because I didn’t know anything about it. My one big takeaway from this course is that dealing with internet traffic / moving a lot of data with limited resources on a large scale is a fun and math-y (but mostly solved) problem. The instructors did a great job presenting the problems and explaining the creative solutions people have come up with to deal with traffic problems (dealing with priority of data, bad actors, etc). The internet is truly an amazing utility-like infrastructure that’s gone through a lot of iterative changes and growing pains. 
	I probably would’ve gotten a C or D in this class. There were chapter tests that I guessed a lot on. If you’d like an excuse, the material was just so dry and not engaging. I’d like to go back and work through the assignments that have been posted since I finished the class.&lt;/p&gt;

&lt;h3 id=&quot;machine-learning&quot;&gt;Machine Learning&lt;/h3&gt;
&lt;h4 id=&quot;machine-learning-online-coursera---2019&quot;&gt;Machine Learning (online, Coursera) - 2019&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://www.coursera.org/learn/machine-learning&quot;&gt;Coursera course&lt;/a&gt; 
&lt;a href=&quot;https://github.com/aryzach/MachineLearningClass&quot;&gt;My code&lt;/a&gt; 
	This class was strictly machine learning (mostly matrix learning) and not a general AI class. This was a really great introduction to the field and helped make all those buzzwords root themselves in something other than magic. 
	The course was taught in Matlab / Octave, and most of the project time went towards implementing the correct regression, back propagation, regularization, cost function, etc. techniques. I’ve forgotten many of the details, but would feel confident implementing something from this class with a little re-learning time. 
	Main topics: Linear regression with one variable, then with multiple variables, logistic regression, regularization, neural network concepts and training, advise for developers who are trying to build and/or train their own systems, support vector machines, unsupervised learning (k-means), anomaly detection, and recommender systems. The project I remember most was identifying handwritten digits using a neural net. Learning the details of things like how back propagation works can get fairly tedious, yet enlightening. 
	The main takeaways from this class are 1. It’s not magic, 2. Determine what type of problem you have (classification, regression) and apply one of these known solutions. Then by using meta-data that is tracking your training, determine how to better your model (usually more data or more independent parameters for regression and neural nets). 
	If you’re actually researching machine learning, I know improvements to models go much deeper into things like number of layers or altering the activation function, but this class was especially great because it enables people to fully build their own system for their application from scratch out of the gate. One of Andrew Ng’s (the professor and renowned ML researcher) gripes of ML is that people are doing too much academic research and not enough application, and this class both teaches from first principles and enables more applied ML use. 
	I would’ve gotten an A in the course, but most of the assignments were walkthroughs, so it’s not saying much. If I wanted to go into machine learning research, I’d probably retake parts of the course, and take another online ML class before I could say I’m a competent and confident machine-learning novice.&lt;/p&gt;

&lt;h3 id=&quot;learn-you-a-haskell&quot;&gt;Learn You a Haskell&lt;/h3&gt;
&lt;h4 id=&quot;learn-you-a-haskell-book---2019&quot;&gt;Learn You a Haskell (book) - 2019&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;http://learnyouahaskell.com&quot;&gt;Book&lt;/a&gt;
	I started reading this book before any PL class because I was interning (and I couldn’t find any more work!), and wanted to move forward with the CS curriculum, but couldn’t download anything that I needed to program (other option was learning more bash scripting). 
	Looking back, Haskell is a strange step for a beginner programmer to take, but it has informed and driven my learning more than a year later. This book is too long and detailed a resource but I guess that’s by necessity when the standard library is so massive. While it introduced me to some cool concepts (Maybe, Either, Monads), I wouldn’t recommend it as a first resource to learn Haskell (see the Haskell class below). I’ve since posted about this on OSSU, and they are replacing the book with the class below, and moving it back in the curriculum, so that it’s both not necessary and to be taken later.
	For some reason I was super intrigued in all of Haskell. I’ve always been a sucker for seemingly elite things, and Haskell is one of those things. I’d read that lifelong programmers would have enlightening breakthroughs after learning Haskell. Category theory and type theory / HoTT seemed so sexy (not that I understand them in the slightest). It seems like the furthest away from manipulating bits and physical state as you could get. I’m still drawn to it, but have only spent a little time using the language, and only slightly understand monads. But it did inspire me to take more math (notably algebra), and I hope to one day understand category theory and HoTT. (I’m currently taking algebra and a graduate level PL class where we learn Agda, which I think is interpreted by Haskell). Haskell is hard, especially as you go towards the land of functors, monoids, and monads. 
	I happy with what I learned while reading this, but have yet to finish the book (stopped around functors). If I finished it just to finish it, I’d be kidding myself, because I don’t really understand functors that well, and definitely don’t understand the monad abstraction, implementation, or use. There weren’t any exercises, but I’d give myself a C- on the whole book, a B+ on the parts I read, and hope that in the next year or so I’ll know Haskell with confidence.&lt;/p&gt;

&lt;h3 id=&quot;software-construction&quot;&gt;Software Construction&lt;/h3&gt;
&lt;h4 id=&quot;software-construction-online-edx-2-parts---2019&quot;&gt;Software Construction (online, edX, 2 parts) - 2019&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://www.edx.org/course/software-construction-object-oriented-design&quot;&gt;Part 1 - Software Construction: Object-Oriented Design&lt;/a&gt; 
&lt;a href=&quot;https://www.edx.org/course/software-construction-data-abstraction&quot;&gt;Part 2 - Software Construction: Data Abstraction&lt;/a&gt; 
&lt;a href=&quot;https://github.com/aryzach/SoftwareConstructionClass&quot;&gt;A mess of my code from the class&lt;/a&gt; 
	I didn’t have much confidence with OOP design before taking this class, and I’m still not as confident and seasoned as I’d like to be. This class helped only mildly with that feeling. Most of the projects I did required the following:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Understand what parts of the code are important for me to understand deeply, and what parts I could mostly ignore&lt;/li&gt;
  &lt;li&gt;Add functionality, which usually required a form of deciding the correct way to refactor and abstract existing code, or implement a design pattern&lt;/li&gt;
  &lt;li&gt;Debug unfamiliar code&lt;/li&gt;
  &lt;li&gt;Create small OO applications from scratch 
  We also created UML diagrams and learned other methods to understand large OO code bases, and implemented a few design patterns (the visitor and decorator patterns are the only one I vaguely remember). 
  Overall, I learned to better read, understand, and work with existing code. I know that in most industry jobs, these skillsets are largely important, and I still would like a lot more practice on this front. I’d really like to start working on larger code bases, and also work through one of the design pattern books and apply the concepts to otherwise messy solutions. I’d also like to understand design patterns in functional languages. 
  Overall, I gained a little through this course, but wouldn’t recommend it to most people. Learning how to work with large code bases is a tricky thing to teach, because, I think, to teach it well, it takes a lot of time and lecture doesn’t really help. I think contributing to a project you care about, or building your own large project is the most effective way to learn to work with large amounts of code. Large code bases take a lot of time to read and fiddle, with large spaces of non-stimulating drudgery. This is a case where you just have to ‘put in the time,’ and that’s unlikely to happen with class projects, and better suited for projects you care about. 
  To conclude, this is an area that doesn’t bode well to class instruction, and is better suited for on-the-job learning or personal project discovery. I’ve yet to do either of those things, so this is definitely something I still struggle with. Because I had quite a bit of trouble with the last project (twitter mapper, here’s somebody elses description of it: https://github.com/MohamedMandouh/MyTwitterMapper/blob/master/README.md), I’d give myself a B/B- in the course.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;programming-languages&quot;&gt;Programming Languages&lt;/h3&gt;
&lt;h4 id=&quot;programming-languages-online-edx-3-parts---2019&quot;&gt;Programming Languages (online, edX, 3 parts) - 2019&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://www.coursera.org/learn/programming-languages&quot;&gt;Part A&lt;/a&gt; 
&lt;a href=&quot;https://www.coursera.org/learn/programming-languages-part-b&quot;&gt;Part B&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.coursera.org/learn/programming-languages-part-c&quot;&gt;Part C&lt;/a&gt; 
&lt;a href=&quot;https://github.com/aryzach/ProgrammingLanguagesClass&quot;&gt;My code&lt;/a&gt; 
	Teaches type systems (dynamic vs static) and where along the spectrum different languages fall and why they fall there (notably SML, Racket, and Ruby). Discussion about the pros and cons of each, how different languages can be preferred depending on use, and specifically what language paradigms are preferred when prototyping vs. shipping a product (seems to be still up for discussion). 
	We also learned about how language semantics determine evaluation, how polymorphism works, about completeness vs. soundness, and about double dispatch. We compared languages by writing same code in different styles in the different languages. 
	The most interesting project was writing an interpreter for a small programming language in Racket, where we implemented language features such as closures, let expressions, function definitions, and function calls. This project was super challenging, but still accessible. It was especially difficult trying to understand the difference between Racket code and MUPL code (name of the small programming language), and the interplay between each of them. 
&lt;a href=&quot;MUPL_Interpreter_Assignment.pdf&quot;&gt;Interpreter assignment&lt;/a&gt;
&lt;a href=&quot;https://github.com/aryzach/ProgrammingLanguagesClass/blob/master/PartB/Week2/SmallLanguageInterpreter.rkt&quot;&gt;Interpreter code written in Racket&lt;/a&gt;
This and the HtDP series talked about above are some of my favorite classes so far. I would’ve gotten an A in this class.&lt;/p&gt;
&lt;h3 id=&quot;prolog&quot;&gt;Prolog&lt;/h3&gt;
&lt;h4 id=&quot;prolog-book---2019&quot;&gt;Prolog (book) - 2019&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;http://www.learnprolognow.org/&quot;&gt;Learn Prolog Now! Book &lt;/a&gt;
&lt;a href=&quot;https://github.com/aryzach/Prolog&quot;&gt;My Prolog coding exercises&lt;/a&gt;
	I don’t really ‘get’ prolog even though I was able to do most (possibly all) the exercises for the half of the book I read. It just wasn’t very enlightening, and seemed like the same things possibly would’ve been easier in other languages. I only got about halfway through the book. I’d give myself an A for the part I did (was able to complete all but one of the many exercises), but a D for my understanding of Prolog overall.&lt;/p&gt;

&lt;h3 id=&quot;discrete-math-math-dept&quot;&gt;Discrete Math (math dept)&lt;/h3&gt;
&lt;h4 id=&quot;discrete-math-ut-austin-math-dept-audit---2019&quot;&gt;Discrete math (UT Austin, math dept, audit) - 2019&lt;/h4&gt;
&lt;p&gt;I came to UT for a few reason, but one reason was that they had some math classes taught using the&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Moore_method&quot;&gt;Moore Method&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Possibly more on this later, but I’m excited about math education, and was really intrigued by this style. UChicago also offers a lot of classes like this, but it would’ve been less likely that I could’ve audited them.&lt;/p&gt;

&lt;p&gt;Anyway, I took this class because I’d never taken proof-based math before and wasn’t confident in my abilities, and because it used the Moore Method. While I think the Moore Method was beneficial to our class, I don’t put it on a pedestal as I did before. 95% of the class time was spent either in groups of 3-6 students writing proofs on the blackboard, or individuals presenting their groups’ proof or homework proofs.&lt;/p&gt;

&lt;p&gt;This class had a lot of overlap from the other discrete math class below, but with a much different perspective; it was a lot more methodical, exhaustive, and tedious. We focused a lot of time on the detail and semantics of the proofs, instead of the problem solving and bigger ideas behind the concepts. This class formalized a lot of concepts that I’ve been informally introduced to before, and gave me confidence in my knowledge of elementary set theory, and ability to write sound proofs. The most novel section for me was the part on equivalence relations.&lt;/p&gt;

&lt;p&gt;I did most/all of the homework, but didn’t take any tests, and think I would’ve gotten an A.&lt;/p&gt;

&lt;h3 id=&quot;discrete-math-cs-dept&quot;&gt;Discrete Math (CS dept)&lt;/h3&gt;
&lt;h4 id=&quot;discrete-math-ut-austin-cs-dept-audit---2019&quot;&gt;Discrete math (UT Austin, CS dept, audit) - 2019&lt;/h4&gt;

&lt;p&gt;I took this class because it’s in the standard CS curriculum, and I didn’t want to take it online.&lt;/p&gt;

&lt;p&gt;This class was a lot of fun. I took it with my friend Dan, who took the class at a different school about 10 years ago. Most of the class was minimal memorization and just a lot of logic games. Some of the main topics were propositional logic, first-order logic, induction on natural numbers, induction on undirected simple graphs, combinatorics, and a primer on complexity/algorithms. The most interesting and fun parts were combinatorics and proving things about graphs.&lt;/p&gt;

&lt;p&gt;I’d recommend a class like this to anybody that likes toying with games (including board games) and solving fun logic problems. Because there were so many instances in this class where you didn’t need to know much math, and the proofs / solutions were often just informal, creative, slightly out-of-the-box answers, I think the class is really accessible to lots of people. With some modification, I think you could teach parts of this course to intrigued middle schoolers.&lt;/p&gt;

&lt;p&gt;As a fun, accessible example (after a short graph theory primer), why can’t each node of a undirected simple graph have a different order? Order being the number of other nodes that it’s connected to, and simple meaning that there’s at most one edge between nodes.&lt;/p&gt;

&lt;p&gt;Here’s an online version that looks really similar to the one I took:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-spring-2015/index.htm&quot;&gt;Discrete Math&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I was in the honors section of the class, which was filled with mostly excited freshman who are part of the Turing Scholars program at UT, so I was with smart, excited kids, but also felt old and out of place at 25. The one test I took in that class, I think I got 95%, and would’ve gotten an A overall.&lt;/p&gt;

&lt;h3 id=&quot;number-theory&quot;&gt;Number Theory&lt;/h3&gt;
&lt;h4 id=&quot;number-theory-ut-austin-audit---2019&quot;&gt;Number Theory (UT Austin, audit) - 2019&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/Elementary-Number-Theory-Its-Applications/dp/0201578891&quot;&gt;Number Theory book we used&lt;/a&gt;&lt;br /&gt;
	I took this class because I knew it had applications in CS, and because I wanted more practice with proof writing and mathematical thinking. Our class was only about nine people and our professor was excited to be able to work with a small group and move fast. We covered drastically more than the other number theory class, which was fun to work through, but also I got a little lost and behind at the end. 
	My class was all math majors, who most likely were able to pick up the material more quickly and gracefully than I was. It was cool to get exposed to things that aren’t normally in an intro to elementary number theory class (like the Dirichlet product), but it came at the expense of me not spending enough time on the fundamentals. Gaps in my understanding were quickly exposed, leading to a struggle for the second half of the class, and I still find myself getting stumped by some fundamental number theory problems that you’d expect a student who’s taken the class to be able to readily answer.
	I probably would’ve gotten a C- in this course, because I spent a lot of time on the homework and could mostly do it all without help, and would’ve done well on the tests in the first half of the course. He posted the test answers online, and I could only do about 50% of the questions with confidence on the later tests. I’d also recommend this course to non-math majors who are interested in and enjoy math, but don’t want to take analysis or algebra.&lt;/p&gt;

&lt;h3 id=&quot;intro-to-real-analysis&quot;&gt;Intro to Real Analysis&lt;/h3&gt;
&lt;h4 id=&quot;intro-to-real-analysis-ut-austin-audit---2019&quot;&gt;Intro to Real Analysis (UT Austin, audit) - 2019&lt;/h4&gt;

&lt;p&gt;Analysis is super intimidating, but I wanted to know what it’s about. In this class we went slowly and only covered material through epsilon-delta / limits of functions. While I enjoyed the class, the material doesn’t seem as elegant and clean as algebra, so I’m a little turned off from analysis. That said, fields like topology, geometry, and high level algebra / type seem to make heavy use of analysis concepts, so I’m still pining to learn it so I can take those other classes without gaps in my knowledge.&lt;/p&gt;

&lt;p&gt;Analysis seems to make heavy use of definitions, which gets tedious and wordy, but this may just be a side effect of an intro class. While I didn’t struggle in the class, I never felt completely satisfied. I would’ve gotten an A in the class.&lt;/p&gt;

&lt;h3 id=&quot;git&quot;&gt;Git&lt;/h3&gt;
&lt;h4 id=&quot;git-online---2019&quot;&gt;Git (online) - 2019&lt;/h4&gt;

&lt;p&gt;I took a short git primer course (3 hours in total?). I knew the basics before, but didn’t know how to take advantage of it. Mainly, now I wish I separated my repositories by project instead of by class.&lt;/p&gt;

&lt;h3 id=&quot;intro-to-haskell&quot;&gt;Intro to Haskell&lt;/h3&gt;
&lt;h4 id=&quot;introduction-to-haskell-online---2019&quot;&gt;Introduction to Haskell (online) - 2019&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://www.seas.upenn.edu/~cis194/spring13/&quot;&gt;Haskell lecture notes and assignments&lt;/a&gt;&lt;br /&gt;
	I’d recommend this class for anybody who wants to learn Haskell, especially for somebody that has experience with some functional language prior. It’s concise, and works through the material quickly. I’m only about halfway through right now, but plan to finish it within the next few months. I’m excited to learn more about monads and actually use them to build something, which I believe this class offers.&lt;/p&gt;

&lt;h3 id=&quot;nand2tetris-computer-architecture&quot;&gt;Nand2Tetris (computer architecture)&lt;/h3&gt;
&lt;h4 id=&quot;nand2tetris-computer-architecture-2-parts-online-edx---2020&quot;&gt;Nand2Tetris (computer architecture, 2 parts, online, edX) - 2020&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://www.coursera.org/learn/build-a-computer&quot;&gt;Part 1&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.coursera.org/learn/nand2tetris2&quot;&gt;Part 2&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.nand2tetris.org/&quot;&gt;Course book and website&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://github.com/aryzach/nand2tetris&quot;&gt;My code&lt;/a&gt;&lt;br /&gt;
	Here we start with a nand gate as a primitive. Later we include a flip-flop as a primitive. From nand gates, we assemble many logic operators (and, or, multiplexor), and then build an ALU (arithmetic logic unit). Using the flip-flop (enables us to maintain state) we build bits, registers, and a series of RAM units. 
	With all this, we construct a computer with a screen display and keyboard. At this point, we can load and run binary programs. Then we write a VM translator from a stack-based VM language to assembly. We’re then introduced to a higher level language called Jack, which is like a lightweight C / Java-like language with classes, functions, methods, variables, fields, constructors, arrays, expressions, etc. We’re then supposed to develop a Jack to VM compiler, and then extend the functionality of our system by building an operating system.
	I’m nearly done with the Jack to VM compiler (written in python), which I hope to finish soon, and then move on to the OS. The compiler was a much bigger and more difficult task than I thought it would be, and it’s slowly starting to turn into spaghetti code, and there’s a lot of room for abstraction where I’m currently missing out on. Because it’s been a few months since I last worked on it, I may just start from scratch and use what I learned in the process to my own benefit. 
	I’m really excited to finish the course, and it’s definitely been eye opening and has uncovered what is seemingly magic. It’s also really hard to hold all the layers of abstraction in your head at the same time, especially at just my first pass at learning this material, so there’s definitely still some magic at play when thinking about how computers work. 
	Two ideas in this class hold me up:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Nand gates and flip-flops are primitives. I think I’d have to take a computer / electrical engineering or physic course to go deeper here&lt;/li&gt;
  &lt;li&gt;The course assumes that we’re not writing the first assembler or compiler. To me, this is cheating a little bit, but I can see how that problem would be way to large for this course. Somehow, somebody built the first assembler using binary, and the first higher-level compiler using assembly (maybe FORTRAN or something similar?). Both projects sound huge, mind-bending, and powerful 
  I would give myself a B in this class. I’ve done all the work and feel confident in the material, but my VM translator and Jack to VM compiler don’t have the cleanest code. While they are bug-free so far, I want to redo these assignments to both understand the material better, and to become better at software design in general, but it’s time consuming, so I haven’t done that yet. If I had to extend one of these to include another feature, it would be a mess, and I’d probably resort to rewriting the program.
  Edit: I started to try to finish the course. All that was left was wrapping up the compiler and the OS chapter. Last time I worked on the compiler was two months ago. I started to relearn my code base, and think I could fairly easily add non-breaking features to finish it. The main problem I ran into was that I don’t remember the jack language that well. The specific problem was in this:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Keyboard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;How many numbers? &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);.&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I wasn’t sure how to handle the string expression. I could generate jack code to compile that would look something like:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;How&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;many&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Keyboard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;which I believe my current compiler could handle, but that’s a messy solution, and could easily cause other things to break and get messy. I don’t remember if there’s a more standard way to solve this in the VM language, because I need to push the string “How many numbers? “ onto the stack before calling ‘Keyboard.readInt 1’, but I don’t remember how to push a string, and I really didn’t spend much time trying to relearn the jack or VM specs. The second problem was that I was having trouble loading directories into the VM emulator, so I couldn’t test programs that spanned more than one class. I might have been doing something wrong / forgot how to do it, or something is wrong with the VM emulator program. I’m a little bummed that I’m giving up / ran into hurdles right now, because I was excited to finish and possibly refactor my compiler. It’s probably the biggest project I’ve done, and would give me good experience with edit old code, abstracting patterns, and refactoring. I also want my biggest project that I’ve worked hard on to be a finished project that I can show off (or at least be proud of).&lt;/p&gt;

&lt;p&gt;I started reading the OS chapter, but decided not to finish. While I think I’d learn some things, it all seemed too tedious right now, and maybe someday I’ll revisit this (but unlikely if I’m being real). I think my time is better spent elsewhere right now, like getting deeper into Haskell, Agda, my AI class, or some larger software development experience. I’d also like to take the OS class eventually, and I’m sure that will overshadow anything I’d learn in this chapter.&lt;/p&gt;

&lt;h3 id=&quot;abstract-algebra&quot;&gt;Abstract Algebra&lt;/h3&gt;
&lt;h4 id=&quot;abstract-algebra-ut-austin-audit---2020&quot;&gt;Abstract Algebra (UT Austin, audit) - 2020&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/Algebra-2nd-Michael-Artin/dp/0132413779&quot;&gt;Algebra by Artin&lt;/a&gt;&lt;br /&gt;
	Both Haskell and a coworker at an internship inspired me to take algebra. Haskell is supposedly based on category theory, which requires more algebra, and my coworker had a PhD in CS, and solved this problem that we had be recognizing that the pattern could match that of a monoid (has an identity, and is associative). Seeing how applying the concept from algebra more easily solved this problem was impressive, and I wanted to know more. 
	I would guess that less than half CS majors take upper-level algebra, and a huge majority that work in software development don’t have a CS degree, so I wonder how many problems like this are out there, just waiting to be solved by an elegant application of some math concept.
	This class is hard. Often times when reading, I get lost in the weeds and lose the bigger picture; then when solving a problem, I often miss details that would’ve helped my solve it. I definitely struggling in the class, but I also missed two weeks of class because I was out of town. I thought I stayed caught up (by reading and doing HW on vacation), but I was still behind and mostly lost during lecture after that. We’re almost half way through the semester now. Spring break just started and the coronavirus ordeal is happening, so classes are going online for probably the next month or two. I’m just auditing the class, so I don’t have access online. This is kind of a blessing in disguise because I was getting overwhelmed in the class with new material and the gaps in my knowledge. So I’m going to cut my losses and plan to take it in the fall. 
	That said, I’ve still learned a lot about groups and had fun working with those concepts, and should be able to pick things up a lot more smoothly in the fall. I mostly like the book, but we started with the groups chapter, and my linear algebra is a little rusty, which the book relies heavily on for examples and exercises.
	With the material we’ve learned up until spring break, I’d give myself a C in the class.&lt;/p&gt;

&lt;h3 id=&quot;grad-level-programming-languages&quot;&gt;Grad-level Programming Languages&lt;/h3&gt;
&lt;h4 id=&quot;graduate-level-programming-languages-ut-austin-audit---2020&quot;&gt;Graduate-level Programming Languages (UT Austin, audit) - 2020&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://plfa.github.io/&quot;&gt;Programming Language Foundations in Agda book&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://github.com/aryzach/ProgrammingLanguageFoundationsInAgda-Part1&quot;&gt;My code&lt;/a&gt;&lt;br /&gt;
	I’m really excited about this class. We’re learning the programming language / proof assistant Agda. We’ve been following the book exactly, and I’ve done every problem in it so far. Even though classes are going online, and I’m just auditing (same issue as the algebra class above), I’m going to continue working through the book, and I think I’ll be able to get through it without much help. That said, Negation is the chapter I’m on right now, and it’s kicking my butt. My professor said he even had a really hard time with it, and just started really understanding it a few weeks ago.
	So far, the book has made me think about types a lot differently. I haven’t done much programming creating and using types before, but it makes me excited to. It’s a cool combination of programming, math, and logic. And it’s all interpreted (I think) by Haskell, and generally somewhat similar to Haskell, so I think it’ll make me a better Haskell developer. 
	So far in the class, I’d give myself an A. I’ll have to revisit this review when I finish the book (or get as far in the book as our prof. planned to, which I think is the Bisimulation chapter).&lt;/p&gt;

&lt;h3 id=&quot;ai&quot;&gt;AI&lt;/h3&gt;
&lt;h4 id=&quot;ai-ut-austin-audit---2020&quot;&gt;AI (UT Austin, audit) - 2020&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;http://aima.cs.berkeley.edu/&quot;&gt;AI: A Modern Approach&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://github.com/aryzach/AIClass&quot;&gt;My code&lt;/a&gt;&lt;br /&gt;
	I’ve only done ¼ of the projects, so I’ll have to revisit this later.&lt;/p&gt;

&lt;h3 id=&quot;neural-computation&quot;&gt;Neural Computation&lt;/h3&gt;
&lt;h4 id=&quot;graduate-level-neural-computation-ut-austin-audit---2020&quot;&gt;Graduate-level Neural Computation (UT Austin, audit) - 2020&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/alexhuth/neuralcomputation-sp2020&quot;&gt;Neural Computation Syllabus&lt;/a&gt;&lt;br /&gt;
	The first part of this course was super interesting. We learned about the brain mechanism owls use to track where a sound comes from on the horizontal axis (race condition that combines sound information from both ears, and uses the time delay from one ear to the other), and vertical axis (one ear tilts up in comparison to the other). We also learned how neurons want to maintain a certain firing rate, which is what causes tinnitus and phantom limb (inputs are shut off, so the brain fires those neurons to maintain a level of activity). 
	Professor Huth was an amazing professor for the short time I went to his class, and seems like a really good person in general. His work is really interesting, and he’s really passionate about it. Unfortunately, between me being out of town, and this coronavirus ordeal, I was only able to catch about a quarter of his class. While I’m really interested in his class, I wish I had a stronger background in AI/machine learning and statistics to be able to think about the material more deeply.&lt;/p&gt;</content><author><name></name></author><category term="class" /><category term="book" /><category term="review" /><summary type="html">This is a chronological listing and description of all resources I’ve used to learn STEM related things. Most of them are computer science and math resources. The resources include college classes, online MOOC-like classes, and books. It’s noted if I audited the class. None of the online courses were for credit, so you could say I audited those, too. I do all the exercises and projects included in the class or book listed, expect for some exceptions where noted. Most of the online classes I take come from an online computer science curriculum that tries to mimic a university CS degree equivalent. The classes are all free and largely project-based. I’ve really enjoyed the curriculum so far and highly recommend most of it. Here’s the link: OSSU (Open Source Society University</summary></entry></feed>